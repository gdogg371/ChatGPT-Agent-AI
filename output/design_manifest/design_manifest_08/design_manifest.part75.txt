", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_06/design_manifest.part52.txt", "sha256_chunk": "72a504fb54f8094d0913b4a0531086fc3840d9c31c232fe3d5ba4b572b565bc3", "sha256_file": "72a504fb54f8094d0913b4a0531086fc3840d9c31c232fe3d5ba4b572b565bc3", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
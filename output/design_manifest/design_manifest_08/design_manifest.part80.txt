", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_06/design_manifest.part56.txt", "sha256_chunk": "92a7a9bc1540523f5b35f6cfc49989c1552d42e2da3ee7b983d97f2dc6fd34c1", "sha256_file": "92a7a9bc1540523f5b35f6cfc49989c1552d42e2da3ee7b983d97f2dc6fd34c1", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
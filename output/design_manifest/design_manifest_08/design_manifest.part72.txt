", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_05/design_manifest.part50.txt", "sha256_chunk": "0bc07b8c271370441a3014cd7a5e893180a0f61ff8d5c0e87b42966aecc3d03a", "sha256_file": "0bc07b8c271370441a3014cd7a5e893180a0f61ff8d5c0e87b42966aecc3d03a", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_03/design_manifest.part24.txt", "sha256_chunk": "ef941df020e1d033656994c2afe88fb9ba8c691d155b05acf7a009e869c03b6c", "sha256_file": "ef941df020e1d033656994c2afe88fb9ba8c691d155b05acf7a009e869c03b6c", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
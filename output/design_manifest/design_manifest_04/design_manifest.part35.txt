", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_03/design_manifest.part22.txt", "sha256_chunk": "0cb2fa66422756fca82a9243a5219bd2978c83d3e11a35f9db7d61101ef3a5b3", "sha256_file": "0cb2fa66422756fca82a9243a5219bd2978c83d3e11a35f9db7d61101ef3a5b3", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_04/design_manifest.part36.txt", "sha256_chunk": "efb1cad641cda50a9d711f906dbc5d1790e2579d83b1f713c1f1eeba740e2a56", "sha256_file": "efb1cad641cda50a9d711f906dbc5d1790e2579d83b1f713c1f1eeba740e2a56", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
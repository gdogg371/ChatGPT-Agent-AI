", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_04/design_manifest.part34.txt", "sha256_chunk": "e3a52ab28da47f0f1fe53075470750e57455ee8026aac885db70133f431ca732", "sha256_file": "e3a52ab28da47f0f1fe53075470750e57455ee8026aac885db70133f431ca732", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_02/design_manifest.part18.txt", "sha256_chunk": "45d463f5c5cc28e9748b81ade6ec9d284434e8ca6e0405aba704e8e28722a714", "sha256_file": "45d463f5c5cc28e9748b81ade6ec9d284434e8ca6e0405aba704e8e28722a714", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
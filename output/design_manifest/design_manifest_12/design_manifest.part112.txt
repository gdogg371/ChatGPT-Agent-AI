", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_08/design_manifest.part80.txt", "sha256_chunk": "50fe4d0aea4de3237fd5df0242c1a61037bf96ded79e80551a33f7d3161cf926", "sha256_file": "50fe4d0aea4de3237fd5df0242c1a61037bf96ded79e80551a33f7d3161cf926", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
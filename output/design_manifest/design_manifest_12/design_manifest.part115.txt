", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_09/design_manifest.part82.txt", "sha256_chunk": "f8b71f655b3f8fa922d4bfb8e82061343cd90feb62198a1a50a47982fee4758d", "sha256_file": "f8b71f655b3f8fa922d4bfb8e82061343cd90feb62198a1a50a47982fee4758d", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
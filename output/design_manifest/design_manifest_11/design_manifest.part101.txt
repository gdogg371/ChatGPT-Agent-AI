", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_08/design_manifest.part72.txt", "sha256_chunk": "50ddd034e887df9e11ca66e5d151374f4a5271d8e9c4c443f4f9e014c2d3730c", "sha256_file": "50ddd034e887df9e11ca66e5d151374f4a5271d8e9c4c443f4f9e014c2d3730c", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
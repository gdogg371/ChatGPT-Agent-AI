", "path": "output/patch_code_bundles/backend/core/plugins/dll_files/vss0.dll", "sha256_chunk": "6d142ef1d322300b7017c41a5a88d16fbc0112eb8523d4bc915d3bbb8855e00c", "sha256_file": "6d142ef1d322300b7017c41a5a88d16fbc0112eb8523d4bc915d3bbb8855e00c", "type": "file_chunk"}
{"byte_end": 52, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IiIiQ29yZSBwcmltaXRpdmVzOiBlcnJvcnMsIHR5cGVzLCBidWRnZXQsIGxvZ3MuIiIiCg==", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/__init__.py", "sha256_chunk": "70fd98b1c6d663e0238a8c065f20af6454a5c985ed8cf94a50535f9b064f89f8", "sha256_file": "70fd98b1c6d663e0238a8c065f20af6454a5c985ed8cf94a50535f9b064f89f8", "type": "file_chunk"}
{"byte_end": 592, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "aW1wb3J0IHN5cyBhcyBfc3lzCl9hbGlhc2VzID0gewogICAgInBhdGNoX2xvb3BfdGVzdDIuZXhlY3V0b3IuYXN0X3V0aWxzIjogICAicGF0Y2hfbG9vcF90ZXN0Mi5kb2NzdHJpbmdzLmFzdF91dGlscyIsCiAgICAicGF0Y2hfbG9vcF90ZXN0Mi5leGVjdXRvci5zYW5pdGl6ZSI6ICAgICJwYXRjaF9sb29wX3Rlc3QyLmRvY3N0cmluZ3Muc2FuaXRpemUiLAogICAgInBhdGNoX2xvb3BfdGVzdDIuZXhlY3V0b3IudmVyaWZ5IjogICAgICAicGF0Y2hfbG9vcF90ZXN0Mi5kb2NzdHJpbmdzLnZlcmlmeSIsCiAgICAicGF0Y2hfbG9vcF90ZXN0Mi5leGVjdXRvci5wcm9tcHRzIjogICAgICJwYXRjaF9sb29wX3Rlc3QyLmRvY3N0cmluZ3MucHJvbXB0X2J1aWxkZXIiLAp9CmZvciBrLCB2IGluIGxpc3QoX2FsaWFzZXMuaXRlbXMoKSk6CiAgICBpZiBrIG5vdCBpbiBfc3lzLm1vZHVsZXM6CiAgICAgICAgdHJ5OgogICAgICAgICAgICBfX2ltcG9ydF9fKHYpCiAgICAgICAgICAgIF9zeXMubW9kdWxlc1trXSA9IF9zeXMubW9kdWxlc1t2XQogICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgIHBhc3MKZGVsIF9zeXMsIF9hbGlhc2VzCg==", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/__init__.py", "sha256_chunk": "7f8e4a2596f779441b03014d3055b1eea6a44052c3064d48b307327a9504ebaf", "sha256_file": "7f8e4a2596f779441b03014d3055b1eea6a44052c3064d48b307327a9504ebaf", "type": "file_chunk"}
{"byte_end": 15679, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/engine.py", "sha256_chunk": "4bbdf88a2bedf9debd8ba2c36b134a5bca32fba6fd82c035d0fa7d878462af10", "sha256_file": "4bbdf88a2bedf9debd8ba2c36b134a5bca32fba6fd82c035d0fa7d878462af10", "type": "file_chunk"}
{"byte_end": 392, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKY2xhc3MgUGlwZWxpbmVFcnJvcihFeGNlcHRpb24pOgogICAgZGVmIF9faW5pdF9fKHNlbGYsIG1lc3NhZ2U6IHN0ciwgKiwgY2F1c2U6IEV4Y2VwdGlvbiB8IE5vbmUgPSBOb25lKToKICAgICAgICBzdXBlcigpLl9faW5pdF9fKG1lc3NhZ2UpCiAgICAgICAgc2VsZi5jYXVzZSA9IGNhdXNlCgpjbGFzcyBEYkVycm9yKFBpcGVsaW5lRXJyb3IpOiAuLi4KY2xhc3MgQnVkZ2V0RXJyb3IoUGlwZWxpbmVFcnJvcik6IC4uLgpjbGFzcyBMbG1DbGllbnRFcnJvcihQaXBlbGluZUVycm9yKTogLi4uCmNsYXNzIFZhbGlkYXRpb25FcnJvcihQaXBlbGluZUVycm9yKTogLi4uCmNsYXNzIElvRXJyb3IoUGlwZWxpbmVFcnJvcik6IC4uLgo=", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/errors.py", "sha256_chunk": "79accfdf9f4382968ef4d2f389fe932fd4da08cc05d42a51a392ca0530f3a4e5", "sha256_file": "79accfdf9f4382968ef4d2f389fe932fd4da08cc05d42a51a392ca0530f3a4e5", "type": "file_chunk"}
{"byte_end": 450, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IiIiQmFjay1jb21wYXQgc2hpbToga2VlcCBvbGQgaW1wb3J0cyB3b3JraW5nLgpQcmVmZXI6IGZyb20gcGF0Y2hfbG9vcF90ZXN0Mi5leGVjdXRvci5lbmdpbmUgaW1wb3J0IEVuZ2luZQoiIiIKZnJvbSAuZW5naW5lIGltcG9ydCBFbmdpbmUgYXMgT3JjaGVzdHJhdG9yCgojIE9wdGlvbmFsOiBnZW50bGUgZGVwcmVjYXRpb24gd2FybmluZyAoc2FmZSB0byByZW1vdmUgbGF0ZXIpCnRyeToKICAgIGltcG9ydCB3YXJuaW5ncyBhcyBfd2FybmluZ3MKICAgIF93YXJuaW5ncy53YXJuKAogICAgICAgICJwYXRjaF9sb29wX3Rlc3QzLmV4ZWN1dG9yLm9yY2hlc3RyYXRvciBpcyBkZXByZWNhdGVkOyB1c2UgZXhlY3V0b3IuZW5naW5lLkVuZ2luZSIsCiAgICAgICAgRGVwcmVjYXRpb25XYXJuaW5nLAogICAgICAgIHN0YWNrbGV2ZWw9MiwKICAgICkKZXhjZXB0IEV4Y2VwdGlvbjoKICAgIHBhc3MK", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/orchestrator.py", "sha256_chunk": "a24b78ed9d778a67cc7b333e2888947bca2b9d664aa23c4fe14e576fb9b40649", "sha256_file": "a24b78ed9d778a67cc7b333e2888947bca2b9d664aa23c4fe14e576fb9b40649", "type": "file_chunk"}
{"byte_end": 807, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwpmcm9tIGRhdGFjbGFzc2VzIGltcG9ydCBkYXRhY2xhc3MKZnJvbSB0eXBpbmcgaW1wb3J0IFByb3RvY29sLCBJdGVyYWJsZSwgRGljdCwgQW55LCBMaXN0CgpAZGF0YWNsYXNzCmNsYXNzIEl0ZW06CiAgICBpZDogc3RyCiAgICByZWxwYXRoOiBzdHIKICAgIGxpbmVubzogaW50CiAgICBzb3VyY2U6IHN0ciB8IE5vbmUgPSBOb25lCiAgICBtZXRhOiBEaWN0W3N0ciwgQW55XSB8IE5vbmUgPSBOb25lCgpAZGF0YWNsYXNzCmNsYXNzIFByb21wdDoKICAgIHN5c3RlbTogc3RyCiAgICB1c2VyOiBzdHIKCkBkYXRhY2xhc3MKY2xhc3MgUmVzdWx0OgogICAgaWQ6IHN0cgogICAgZGlhZ25vc3RpY3M6IERpY3Rbc3RyLCBBbnldCiAgICBuZXdfZG9jc3RyaW5nOiBzdHIgfCBOb25lID0gTm9uZQoKY2xhc3MgVGFza0FkYXB0ZXIoUHJvdG9jb2wpOgogICAgdGFza19uYW1lOiBzdHIKICAgIGRlZiBwcmVwYXJlX2l0ZW1zKHNlbGYsIHJvd3M6IEl0ZXJhYmxlW0l0ZW1dKSAtPiBMaXN0W0l0ZW1dOiAuLi4KICAgIGRlZiBidWlsZF9wcm9tcHQoc2VsZiwgYmF0Y2g6IExpc3RbSXRlbV0pIC0+IFByb21wdDogLi4uCiAgICBkZWYgcGFyc2VfcmVzcG9uc2Uoc2VsZiwgcmF3OiBEaWN0W3N0ciwgQW55XSkgLT4gRGljdFtzdHIsIFJlc3VsdF06IC4uLgogICAgZGVmIHZlcmlmeShzZWxmLCBpdGVtOiBJdGVtLCByZXN1bHQ6IFJlc3VsdCkgLT4gTGlzdFtzdHJdOiAuLi4KICAgIGRlZiBhcHBseShzZWxmLCBpdGVtOiBJdGVtLCByZXN1bHQ6IFJlc3VsdCkgLT4gc3RyOiAuLi4K", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/plugin_api.py", "sha256_chunk": "2b7a306bb448175095eb05e470bc99a7e5ba933342ae77b7e00b7036ad7001af", "sha256_file": "2b7a306bb448175095eb05e470bc99a7e5ba933342ae77b7e00b7036ad7001af", "type": "file_chunk"}
{"byte_end": 75, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSB2Mi5iYWNrZW5kLmNvcmUuZG9jc3RyaW5ncy5wcm9tcHRfYnVpbGRlciBpbXBvcnQgKiAgIyBub3FhOiBGNDAxLEY0MDMK", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/prompts.py", "sha256_chunk": "91e1a45580a07a831494a44ae4c00d8b0fcfe150c5370c172dab65e6f56af356", "sha256_file": "91e1a45580a07a831494a44ae4c00d8b0fcfe150c5370c172dab65e6f56af356", "type": "file_chunk"}
{"byte_end": 3574, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKZnJvbSBkYXRhY2xhc3NlcyBpbXBvcnQgZGF0YWNsYXNzCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aApmcm9tIHR5cGluZyBpbXBvcnQgRGljdCwgQW55LCBUdXBsZSwgT3B0aW9uYWwKCmZyb20gdjIuYmFja2VuZC5jb3JlLmRvY3N0cmluZ3MuYXN0X3V0aWxzIGltcG9ydCBmaW5kX3RhcmdldF9ieV9saW5lbm8sIFRhcmdldEluZm8KZnJvbSB2Mi5iYWNrZW5kLmNvcmUudXRpbHMuaW8uZmlsZV9vcHMgaW1wb3J0IEZpbGVPcHMKZnJvbSB2Mi5iYWNrZW5kLmNvcmUucHJvbXB0X3BpcGVsaW5lLmV4ZWN1dG9yLmVycm9ycyBpbXBvcnQgSW9FcnJvcgoKCkBkYXRhY2xhc3MKY2xhc3MgU291cmNlUmV0cmlldmVyOgogICAgIiIiCiAgICBFbnJpY2ggcm93cyBmcm9tIHRoZSBpbnRyb3NwZWN0aW9uIERCIHdpdGggcHJlY2lzZSBBU1QgdGFyZ2V0aW5nIGFuZCBwcm9tcHQgY29udGV4dC4KCiAgICBUaGlzIGNsYXNzIGludGVudGlvbmFsbHkgZXhwb3NlcyBhIGZldyBoZWxwZXIgbWV0aG9kcyAocmVhZF9zb3VyY2UsIHNsaWNlX2NvbnRleHQsIGV0Yy4pCiAgICBzbyBpdCByZW1haW5zIOKAnHJpY2hlcuKAnSBhbmQgY2xvc2VyIHRvIGEgbXVsdGktZnVuY3Rpb24gcmV0cmlldmVyIHdpdGhvdXQgYnJlYWtpbmcgeW91cgogICAgZXhpc3Rpbmcgb3JjaGVzdHJhdG9yIHdoaWNoIG9ubHkgcmVxdWlyZXMgZW5yaWNoKCkuCiAgICAiIiIKICAgIHByb2plY3Rfcm9vdDogUGF0aAogICAgZmlsZV9vcHM6IEZpbGVPcHMKCiAgICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICAjIFB1YmxpYyBBUEkKICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgIGRlZiBlbnJpY2goc2VsZiwgcm93OiBEaWN0W3N0ciwgQW55XSkgLT4gRGljdFtzdHIsIEFueV06CiAgICAgICAgIiIiCiAgICAgICAgRXhwZWN0ZWQgcm93IGtleXM6IGlkLCBmaWxlcGF0aCwgbGluZW5vLCBkZXNjcmlwdGlvbiwgbmFtZSwgdW5pcXVlX2tleV9oYXNoCiAgICAgICAgUmV0dXJucyBhbiBpdGVtIHdpdGg6IGlkLCByZWxwYXRoLCBwYXRoLCBzaWduYXR1cmUsIHRhcmdldF9saW5lbm8sIGtpbmQsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGhhc19kb2NzdHJpbmcsIGV4aXN0aW5nX2RvY3N0cmluZywgY29udGV4dF9jb2RlCiAgICAgICAgIiIiCiAgICAgICAgcmVscGF0aCwgYWJzcGF0aCA9IHNlbGYucmVzb2x2ZV9wYXRoKHJvd1siZmlsZXBhdGgiXSkKICAgICAgICBzcmMgPSBzZWxmLnJlYWRfc291cmNlKGFic3BhdGgpCgogICAgICAgIHRpbmZvID0gc2VsZi5yZWNsYXNzaWZ5X3RhcmdldChzcmMsIGludChyb3cuZ2V0KCJsaW5lbm8iLCAxKSksIHJlbHBhdGgpCgogICAgICAgIGNvbnRleHRfY29kZSA9IHNlbGYuc2xpY2VfY29udGV4dChzcmMsIGFuY2hvcl9saW5lbm89dGluZm8ubGluZW5vLCBiZWZvcmU9MTUsIGFmdGVyPTUwKQoKICAgICAgICByZXR1cm4gewogICAgICAgICAgICAiaWQiOiBzdHIocm93LmdldCgiaWQiLCByb3cuZ2V0KCJ1bmlxdWVfa2V5X2hhc2giLCAiIikpKSwKICAgICAgICAgICAgImhhc2giOiByb3cuZ2V0KCJ1bmlxdWVfa2V5X2hhc2giKSwKICAgICAgICAgICAgInJlbHBhdGgiOiByZWxwYXRoLAogICAgICAgICAgICAicGF0aCI6IHN0cihhYnNwYXRoKSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogKHJvdy5nZXQoImRlc2NyaXB0aW9uIikgb3IgIiIpLnN0cmlwKCksCiAgICAgICAgICAgICJuYW1lIjogcm93LmdldCgibmFtZSIpLAogICAgICAgICAgICAia2luZCI6IHRpbmZvLmtpbmQsCiAgICAgICAgICAgICJ0YXJnZXRfbGluZW5vIjogdGluZm8ubGluZW5vLAogICAgICAgICAgICAic2lnbmF0dXJlIjogdGluZm8uc2lnbmF0dXJlLAogICAgICAgICAgICAiaGFzX2RvY3N0cmluZyI6IHRpbmZvLmhhc19kb2NzdHJpbmcsCiAgICAgICAgICAgICJleGlzdGluZ19kb2NzdHJpbmciOiB0aW5mby5leGlzdGluZ19kb2NzdHJpbmcgb3IgIiIsCiAgICAgICAgICAgICJjb250ZXh0X2NvZGUiOiBjb250ZXh0X2NvZGUsCiAgICAgICAgfQoKICAgICMgLS0tLS0tLS0tLS0tLS0tLS0tLS0KICAgICMgSGVscGVycyAoa2VwdCBleHBsaWNpdCBzbyB0aGlzIGZpbGUgcmVtYWlucyBmZWF0dXJlLXJpY2gpCiAgICAjIC0tLS0tLS0tLS0tLS0tLS0tLS0tCiAgICBkZWYgcmVzb2x2ZV9wYXRoKHNlbGYsIHJlbHBhdGg6IHN0cikgLT4gVHVwbGVbc3RyLCBQYXRoXToKICAgICAgICByZWwgPSBQYXRoKHJlbHBhdGgpLmFzX3Bvc2l4KCkKICAgICAgICBhYnNfcGF0aCA9IChzZWxmLnByb2plY3Rfcm9vdCAvIHJlbCkucmVzb2x2ZSgpCiAgICAgICAgaWYgbm90IGFic19wYXRoLmV4aXN0cygpOgogICAgICAgICAgICByYWlzZSBJb0Vycm9yKGYiRmlsZSBub3QgZm91bmQ6IHthYnNfcGF0aH0iKQogICAgICAgIHJldHVybiByZWwsIGFic19wYXRoCgogICAgZGVmIHJlYWRfc291cmNlKHNlbGYsIGFic3BhdGg6IFBhdGgpIC0+IHN0cjoKICAgICAgICByZXR1cm4gc2VsZi5maWxlX29wcy5yZWFkX3RleHQoYWJzcGF0aCkKCiAgICBkZWYgcmVjbGFzc2lmeV90YXJnZXQoc2VsZiwgc3JjOiBzdHIsIGxpbmVubzogaW50LCByZWxwYXRoOiBzdHIpIC0+IFRhcmdldEluZm86CiAgICAgICAgIiIiCiAgICAgICAgRG8gTk9UIHRydXN0IERCIHN5bWJvbF90eXBlIGZvciBwbGFjZW1lbnQuIFJlLWRlcml2ZSBmcm9tIHRoZSBBU1QgdXNpbmcgdGhlIGxpbmVubyBoaW50LgogICAgICAgICIiIgogICAgICAgIHJldHVybiBmaW5kX3RhcmdldF9ieV9saW5lbm8oc3JjLCBsaW5lbm8sIHJlbHBhdGgpCgogICAgZGVmIHNsaWNlX2NvbnRleHQoc2VsZiwgc3JjOiBzdHIsIGFuY2hvcl9saW5lbm86IGludCwgYmVmb3JlOiBpbnQgPSAxNSwgYWZ0ZXI6IGludCA9IDUwKSAtPiBzdHI6CiAgICAgICAgIiIiCiAgICAgICAgRXh0cmFjdCBhIG1vZGVzdCB3aW5kb3cgb2YgY29kZSBhcm91bmQgdGhlIGFuY2hvciB0byBoZWxwIHRoZSBMTE0uCiAgICAgICAgIiIiCiAgICAgICAgbGluZXMgPSBzcmMuc3BsaXRsaW5lcygpCiAgICAgICAgaWR4MCA9IG1heChhbmNob3JfbGluZW5vIC0gMSwgMCkKICAgICAgICBzdGFydCA9IG1heChpZHgwIC0gYmVmb3JlLCAwKQogICAgICAgIGVuZCA9IG1pbihpZHgwICsgYWZ0ZXIsIGxlbihsaW5lcykpCiAgICAgICAgcmV0dXJuICJcbiIuam9pbihsaW5lc1tzdGFydDplbmRdKQoKICAgICMgT3B0aW9uYWwgZnV0dXJlIGhvb2tzOiBpZiB5b3UgaGFkIHByaW9yIHV0aWxpdGllcywgcGx1ZyB0aGVtIGhlcmUKICAgIGRlZiBleHRyYWN0X3NpZ25hdHVyZV9vbmx5KHNlbGYsIHNyYzogc3RyLCBsaW5lbm86IGludCkgLT4gT3B0aW9uYWxbc3RyXToKICAgICAgICAiIiIKICAgICAgICBFeGFtcGxlIHBsYWNlaG9sZGVyIGlmIHlvdSBuZWVkIGEgcmF3IHNpZ25hdHVyZSBxdWlja2x5IChub3QgdXNlZCBieSBvcmNoZXN0cmF0b3IpLgogICAgICAgICIiIgogICAgICAgIHRpbmZvID0gZmluZF90YXJnZXRfYnlfbGluZW5vKHNyYywgbGluZW5vKQogICAgICAgIHJldHVybiB0aW5mby5zaWduYXR1cmUgaWYgdGluZm8gZWxzZSBOb25lCg==", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/retriever.py", "sha256_chunk": "18ce7a967e4000ede3577c54ad65a03e402f78236704e56c6935782d8b9e6fa4", "sha256_file": "18ce7a967e4000ede3577c54ad65a03e402f78236704e56c6935782d8b9e6fa4", "type": "file_chunk"}
{"byte_end": 1621, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IHNxbGl0ZTMKZnJvbSBkYXRhY2xhc3NlcyBpbXBvcnQgZGF0YWNsYXNzCmZyb20gdHlwaW5nIGltcG9ydCBEaWN0LCBJdGVyYXRvciwgT3B0aW9uYWwKCgpAZGF0YWNsYXNzCmNsYXNzIEludHJvc3BlY3Rpb25EYlNvdXJjZToKICAgIHVybDogc3RyCiAgICB0YWJsZTogc3RyID0gImludHJvc3BlY3Rpb25faW5kZXgiCiAgICBzdGF0dXNfZmlsdGVyOiBPcHRpb25hbFtzdHJdID0gImFjdGl2ZSIKICAgIG1heF9yb3dzOiBPcHRpb25hbFtpbnRdID0gTm9uZQoKICAgIGRlZiBfY29ubmVjdChzZWxmKSAtPiBzcWxpdGUzLkNvbm5lY3Rpb246CiAgICAgICAgcyA9IHNlbGYudXJsLnN0cmlwKCkKICAgICAgICBpZiBub3Qgcy5zdGFydHN3aXRoKCJzcWxpdGU6Ly8vIik6CiAgICAgICAgICAgIHJhaXNlIFZhbHVlRXJyb3IoZiJPbmx5IHNxbGl0ZSBVUkxzIHN1cHBvcnRlZCBpbiB0aGlzIHByb3RvdHlwZSwgZ290OiB7c2VsZi51cmx9IikKICAgICAgICBwYXRoID0gc1tsZW4oInNxbGl0ZTovLy8iKSA6XQogICAgICAgIGNvbiA9IHNxbGl0ZTMuY29ubmVjdChwYXRoKQogICAgICAgIGNvbi5yb3dfZmFjdG9yeSA9IHNxbGl0ZTMuUm93CiAgICAgICAgcmV0dXJuIGNvbgoKICAgIGRlZiByZWFkX3Jvd3Moc2VsZikgLT4gSXRlcmF0b3JbRGljdF06CiAgICAgICAgc3FsID0gW2YiU0VMRUNUIGlkLCBmaWxlcGF0aCwgc3ltYm9sX3R5cGUsIG5hbWUsIGxpbmVubywgZGVzY3JpcHRpb24sIHVuaXF1ZV9rZXlfaGFzaCBGUk9NIHtzZWxmLnRhYmxlfSJdCiAgICAgICAgcGFyYW1zID0gW10KICAgICAgICBpZiBzZWxmLnN0YXR1c19maWx0ZXI6CiAgICAgICAgICAgIHNxbC5hcHBlbmQoIldIRVJFIHN0YXR1cyA9ID8iKQogICAgICAgICAgICBwYXJhbXMuYXBwZW5kKHNlbGYuc3RhdHVzX2ZpbHRlcikKICAgICAgICBzcWwuYXBwZW5kKCJPUkRFUiBCWSBpZCBBU0MiKQogICAgICAgIGlmIGlzaW5zdGFuY2Uoc2VsZi5tYXhfcm93cywgaW50KSBhbmQgc2VsZi5tYXhfcm93cyA+IDA6CiAgICAgICAgICAgIHNxbC5hcHBlbmQoIkxJTUlUID8iKQogICAgICAgICAgICBwYXJhbXMuYXBwZW5kKHNlbGYubWF4X3Jvd3MpCiAgICAgICAgcSA9ICIgIi5qb2luKHNxbCkKCiAgICAgICAgd2l0aCBzZWxmLl9jb25uZWN0KCkgYXMgY29uOgogICAgICAgICAgICBmb3Igcm93IGluIGNvbi5leGVjdXRlKHEsIHBhcmFtcyk6CiAgICAgICAgICAgICAgICB5aWVsZCB7CiAgICAgICAgICAgICAgICAgICAgImlkIjogcm93WyJpZCJdLAogICAgICAgICAgICAgICAgICAgICJmaWxlcGF0aCI6IHJvd1siZmlsZXBhdGgiXSwKICAgICAgICAgICAgICAgICAgICAibGluZW5vIjogcm93WyJsaW5lbm8iXSwKICAgICAgICAgICAgICAgICAgICAibmFtZSI6IHJvd1sibmFtZSJdLAogICAgICAgICAgICAgICAgICAgICJzeW1ib2xfdHlwZSI6IHJvd1sic3ltYm9sX3R5cGUiXSwKICAgICAgICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiByb3dbImRlc2NyaXB0aW9uIl0sCiAgICAgICAgICAgICAgICAgICAgInVuaXF1ZV9rZXlfaGFzaCI6IHJvd1sidW5pcXVlX2tleV9oYXNoIl0sCiAgICAgICAgICAgICAgICB9Cg==", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/sources.py", "sha256_chunk": "059f0caf61d3ebba6b27b15c446cf9edb92f61929d0cb26986d9ee2f85e01ea6", "sha256_file": "059f0caf61d3ebba6b27b15c446cf9edb92f61929d0cb26986d9ee2f85e01ea6", "type": "file_chunk"}
{"byte_end": 9023, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/executor/steps.py", "sha256_chunk": "aa21c65c7c0c009275cb8ad2860f6388ce207beff2190612a7660b1e86e3ad33", "sha256_file": "aa21c65c7c0c009275cb8ad2860f6388ce207beff2190612a7660b1e86e3ad33", "type": "file_chunk"}
{"byte_end": 42, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IiIiTExNIGNsaWVudCwgcm91dGVyLCBzY2hlbWEsIHBhcnNlci4iIiIK", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/llm/__init__.py", "sha256_chunk": "14e50a4de47c73b3ba6be150b86de7f110ad513453b3b7f7fcf262519de3bb03", "sha256_file": "14e50a4de47c73b3ba6be150b86de7f110ad513453b3b7f7fcf262519de3bb03", "type": "file_chunk"}
{"byte_end": 11988, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/llm/client.py", "sha256_chunk": "79ed6fea70832f8bfa530f3294498bfe99615d983283c1960f1529466a78933f", "sha256_file": "79ed6fea70832f8bfa530f3294498bfe99615d983283c1960f1529466a78933f", "type": "file_chunk"}
{"byte_end": 1704, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwppbXBvcnQganNvbiwgcmUKZnJvbSB0eXBpbmcgaW1wb3J0IEFueSwgSXRlcmFibGUsIExpc3QsIERpY3QKZnJvbSB2Mi5iYWNrZW5kLmNvcmUucHJvbXB0X3BpcGVsaW5lLmV4ZWN1dG9yLmVycm9ycyBpbXBvcnQgVmFsaWRhdGlvbkVycm9yCgpjbGFzcyBSZXNwb25zZVBhcnNlcjoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBleHBlY3RlZF9pZHM6IEl0ZXJhYmxlW3N0cl0pOgogICAgICAgIHNlbGYuZXhwZWN0ZWQgPSBzZXQobWFwKHN0ciwgZXhwZWN0ZWRfaWRzKSkKCiAgICBkZWYgX2NvZXJjZShzZWxmLCByYXc6IHN0cikgLT4gQW55OgogICAgICAgIHRyeToKICAgICAgICAgICAgb2JqID0ganNvbi5sb2FkcyhyYXcpCiAgICAgICAgICAgIGlmIGlzaW5zdGFuY2Uob2JqLCBkaWN0KSBhbmQgIml0ZW1zIiBpbiBvYmo6IHJldHVybiBvYmpbIml0ZW1zIl0KICAgICAgICAgICAgcmV0dXJuIG9iagogICAgICAgIGV4Y2VwdCBqc29uLkpTT05EZWNvZGVFcnJvcjoKICAgICAgICAgICAgbSA9IHJlLnNlYXJjaChyJyhcW1xzKlx7LipcfVxzKlxdKScsIHJhdywgZmxhZ3M9cmUuRE9UQUxMKQogICAgICAgICAgICBpZiBub3QgbTogcmFpc2UgVmFsaWRhdGlvbkVycm9yKCJSZXNwb25zZSBpcyBub3QgdmFsaWQgSlNPTiBhcnJheSIpCiAgICAgICAgICAgIHJldHVybiBqc29uLmxvYWRzKG0uZ3JvdXAoMSkpCgogICAgZGVmIHBhcnNlKHNlbGYsIHJhdzogc3RyKSAtPiBMaXN0W0RpY3Rbc3RyLCBBbnldXToKICAgICAgICBkYXRhID0gc2VsZi5fY29lcmNlKHJhdykKICAgICAgICBpZiBub3QgaXNpbnN0YW5jZShkYXRhLCBsaXN0KTogcmFpc2UgVmFsaWRhdGlvbkVycm9yKCJUb3AtbGV2ZWwgSlNPTiBtdXN0IGJlIGFuIGFycmF5IG9yIG9iamVjdCB3aXRoIGl0ZW1zW10iKQogICAgICAgIG91dDogTGlzdFtEaWN0W3N0ciwgQW55XV0gPSBbXTsgc2Vlbjogc2V0W3N0cl0gPSBzZXQoKQogICAgICAgIGZvciBpLCBpdGVtIGluIGVudW1lcmF0ZShkYXRhKToKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2UoaXRlbSwgZGljdCk6IHJhaXNlIFZhbGlkYXRpb25FcnJvcihmIkl0ZW0ge2l9IG5vdCBhbiBvYmplY3QiKQogICAgICAgICAgICBfaWQgPSBzdHIoaXRlbS5nZXQoImlkIiwgIiIpKS5zdHJpcCgpOyBfZG9jID0gaXRlbS5nZXQoImRvY3N0cmluZyIpCiAgICAgICAgICAgIGlmIG5vdCBfaWQ6IHJhaXNlIFZhbGlkYXRpb25FcnJvcihmIkl0ZW0ge2l9IG1pc3NpbmcgaWQiKQogICAgICAgICAgICBpZiBfaWQgaW4gc2VlbjogY29udGludWUKICAgICAgICAgICAgaWYgbm90IGlzaW5zdGFuY2UoX2RvYywgc3RyKSBvciBub3QgX2RvYy5zdHJpcCgpOiByYWlzZSBWYWxpZGF0aW9uRXJyb3IoZiJJdGVtIHtfaWR9IGhhcyBlbXB0eSBkb2NzdHJpbmciKQogICAgICAgICAgICBvdXQuYXBwZW5kKHsiaWQiOiBfaWQsICJkb2NzdHJpbmciOiBfZG9jLCAibm90ZXMiOiBpdGVtLmdldCgibm90ZXMiKX0pOyBzZWVuLmFkZChfaWQpCiAgICAgICAgbWlzc2luZyA9IHNlbGYuZXhwZWN0ZWQuZGlmZmVyZW5jZSh7b1siaWQiXSBmb3IgbyBpbiBvdXR9KQogICAgICAgIGlmIG1pc3Npbmc6IHJhaXNlIFZhbGlkYXRpb25FcnJvcihmIk1pc3NpbmcgaWRzIGluIHJlc3BvbnNlOiB7c29ydGVkKG1pc3NpbmcpWzo1XX0iKQogICAgICAgIHJldHVybiBvdXQK", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/llm/response_parser.py", "sha256_chunk": "c656fbe70da2594ad5897ada5db68451b44c159d5d87661378d38a78156b1136", "sha256_file": "c656fbe70da2594ad5897ada5db68451b44c159d5d87661378d38a78156b1136", "type": "file_chunk"}
{"byte_end": 682, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwpmcm9tIGRhdGFjbGFzc2VzIGltcG9ydCBkYXRhY2xhc3MKCkBkYXRhY2xhc3MKY2xhc3MgUm91dGluZ0NvbnRleHQ6CiAgICB0YXNrX3R5cGU6IHN0ciA9ICJkb2NzdHJpbmdfcmV3cml0ZSIKICAgIGF2Z19pbnB1dF90b2tlbnM6IGludCA9IDAKICAgIG5lZWRzX3Zpc2lvbjogYm9vbCA9IEZhbHNlCiAgICBuZWVkc190b29sczogYm9vbCA9IEZhbHNlCiAgICBjb3N0X3RpZXI6IHN0ciA9ICJsb3ciCgpjbGFzcyBNb2RlbFJvdXRlcjoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBkZWZhdWx0OiBzdHIgPSAiYXV0byIpOgogICAgICAgIHNlbGYuZGVmYXVsdCA9IGRlZmF1bHQKCiAgICBkZWYgY2hvb3NlKHNlbGYsIGN0eDogUm91dGluZ0NvbnRleHQsIG92ZXJyaWRlOiBzdHIgfCBOb25lID0gTm9uZSkgLT4gc3RyOgogICAgICAgIGlmIG92ZXJyaWRlIGFuZCBvdmVycmlkZSAhPSAiYXV0byI6IHJldHVybiBvdmVycmlkZQogICAgICAgIGlmIGN0eC5uZWVkc192aXNpb246IHJldHVybiAiZ3B0LTRvLW1pbmkiCiAgICAgICAgaWYgY3R4LnRhc2tfdHlwZSA9PSAiZG9jc3RyaW5nX3Jld3JpdGUiIGFuZCBjdHguYXZnX2lucHV0X3Rva2VucyA8IDEyMDAwOiByZXR1cm4gImdwdC00by1taW5pIgogICAgICAgIHJldHVybiAiZ3B0LTRvLW1pbmkiCg==", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/llm/router.py", "sha256_chunk": "2e1750cdb36201dafc5acac536fe3179bb7d5ebf4c0492626b80bc3c55986961", "sha256_file": "2e1750cdb36201dafc5acac536fe3179bb7d5ebf4c0492626b80bc3c55986961", "type": "file_chunk"}
{"byte_end": 1764, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwpmcm9tIHR5cGluZyBpbXBvcnQgTGlzdCwgRGljdCwgQW55LCBPcHRpb25hbAoKZGVmIF9pdGVtX3NjaGVtYV9mb3JfaWQoaWRfc3RyOiBzdHIpIC0+IERpY3Rbc3RyLCBBbnldOgogICAgcmV0dXJuIHsKICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IEZhbHNlLAogICAgICAgICJyZXF1aXJlZCI6IFsiaWQiLCAibW9kZSIsICJkb2NzdHJpbmciXSwKICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImlkIjogeyJ0eXBlIjogInN0cmluZyIsICJjb25zdCI6IGlkX3N0cn0sCiAgICAgICAgICAgICJtb2RlIjogeyJ0eXBlIjogInN0cmluZyIsICJlbnVtIjogWyJyZXdyaXRlIiwgImNyZWF0ZSJdfSwKICAgICAgICAgICAgImRvY3N0cmluZyI6IHsidHlwZSI6ICJzdHJpbmciLCAibWluTGVuZ3RoIjogMX0sCiAgICAgICAgfSwKICAgIH0KCmRlZiBvcGVuYWlfcmVzcG9uc2VfZm9ybWF0KGV4cGVjdGVkX2lkczogT3B0aW9uYWxbTGlzdFtzdHJdXSA9IE5vbmUpIC0+IERpY3Rbc3RyLCBBbnldOgogICAgIiIiCiAgICBJZiBleHBlY3RlZF9pZHMgcHJvdmlkZWQsIGJ1aWxkIGEgSlNPTiBTY2hlbWEgdGhhdCBmb3JjZXMgdGhvc2UgZXhhY3QgaWRzCiAgICAob25lIG9iamVjdCBwZXIgaWQsIGluIGFueSBvcmRlcikuIFN0cmljdCBtb2RlIE9OIGZvciBSZXNwb25zZXMgQVBJLgogICAgRm9yIENoYXQgQ29tcGxldGlvbnMsIGNhbGxlciBtYXkgaWdub3JlIHRoZSBzY2hlbWEgYW5kIGp1c3QgdXNlIGpzb25fb2JqZWN0IG1vZGUuCiAgICAiIiIKICAgIGlmIGV4cGVjdGVkX2lkczoKICAgICAgICBzY2hlbWFfaXRlbXMgPSBbX2l0ZW1fc2NoZW1hX2Zvcl9pZChpKSBmb3IgaSBpbiBleHBlY3RlZF9pZHNdCiAgICAgICAgc2NoZW1hOiBEaWN0W3N0ciwgQW55XSA9IHsKICAgICAgICAgICAgIm5hbWUiOiAiRG9jc3RyaW5nQmF0Y2giLAogICAgICAgICAgICAic2NoZW1hIjogewogICAgICAgICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IEZhbHNlLAogICAgICAgICAgICAgICAgInJlcXVpcmVkIjogWyJpdGVtcyJdLAogICAgICAgICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAgICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICAgICAgICAgICAgICMgYWxsb3cgYW55IG9yZGVyIGJ1dCByZXF1aXJlIGV4YWN0IGNvdW50IG9mIGl0ZW1zCiAgICAgICAgICAgICAgICAgICAgICAgICJtaW5JdGVtcyI6IGxlbihleHBlY3RlZF9pZHMpLAogICAgICAgICAgICAgICAgICAgICAgICAibWF4SXRlbXMiOiBsZW4oZXhwZWN0ZWRfaWRzKSwKICAgICAgICAgICAgICAgICAgICAgICAgIml0ZW1zIjogc2NoZW1hX2l0ZW1zIGlmIGxlbihleHBlY3RlZF9pZHMpID09IDEgZWxzZSB7ImFueU9mIjogc2NoZW1hX2l0ZW1zfSwKICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICB9LAogICAgICAgICAgICAic3RyaWN0IjogVHJ1ZSwKICAgICAgICB9CiAgICAgICAgcmV0dXJuIHsidHlwZSI6ICJqc29uX3NjaGVtYSIsICJqc29uX3NjaGVtYSI6IHNjaGVtYSwgInN0cmljdCI6IFRydWV9CiAgICAjIGRlZmF1bHQgSlNPTiBtb2RlCiAgICByZXR1cm4geyJ0eXBlIjogImpzb25fb2JqZWN0In0K", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/llm/schema.py", "sha256_chunk": "ba83948c0119fcd47f8058fd30054d0a3b35f35dc5c95e051b4cc008652fa825", "sha256_file": "ba83948c0119fcd47f8058fd30054d0a3b35f35dc5c95e051b4cc008652fa825", "type": "file_chunk"}
{"byte_end": 52, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IiIiQ29yZSBwcmltaXRpdmVzOiBlcnJvcnMsIHR5cGVzLCBidWRnZXQsIGxvZ3MuIiIiCg==", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/preflight/__init__.py", "sha256_chunk": "70fd98b1c6d663e0238a8c065f20af6454a5c985ed8cf94a50535f9b064f89f8", "sha256_file": "70fd98b1c6d663e0238a8c065f20af6454a5c985ed8cf94a50535f9b064f89f8", "type": "file_chunk"}
{"byte_end": 1416, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwpmcm9tIGRhdGFjbGFzc2VzIGltcG9ydCBkYXRhY2xhc3MKZnJvbSB0eXBpbmcgaW1wb3J0IExpc3QsIERpY3QsIENhbGxhYmxlCgpAZGF0YWNsYXNzKHNsb3RzPVRydWUpCmNsYXNzIFRva2VuQnVkZ2V0ZXI6CiAgICBtYXhfY3R4OiBpbnQKICAgIHJlc3BfcGVyX2l0ZW06IGludAogICAgZ3VhcmRyYWlsOiBpbnQgPSAxMDI0CiAgICBiYXRjaF9vdmVyaGVhZF90b2tlbnM6IGludCA9IDgwMCAgIyBhY2NvdW50IGZvciBzeXN0ZW0gKyBzY2hlbWEgKyBkZWxpbWl0ZXJzCgogICAgZGVmIGVzdGltYXRlKHNlbGYsIHM6IHN0cikgLT4gaW50OgogICAgICAgICMgNCBjaGFycy90b2tlbiBoZXVyaXN0aWMgKyAxMCUgaGVhZHJvb20KICAgICAgICByZXR1cm4gaW50KGxlbihzKSAvIDQgKiAxLjEpICsgMQoKICAgIGRlZiBwYWNrKHNlbGYsIGl0ZW1zOiBMaXN0W0RpY3RdLCBzZXJpYWxpemVfZm46IENhbGxhYmxlW1tMaXN0W0RpY3RdXSwgc3RyXSkgLT4gTGlzdFtMaXN0W0RpY3RdXToKICAgICAgICAiIiJHcmVlZHkgcGFjayB3aXRoIGJhdGNoIG92ZXJoZWFkOyBzaW5nbGUtaXRlbSBmYWxsYmFjayBpZiB0b28gbGFyZ2UuIiIiCiAgICAgICAgYmF0Y2hlczogTGlzdFtMaXN0W0RpY3RdXSA9IFtdCiAgICAgICAgY3VyOiBMaXN0W0RpY3RdID0gW10KICAgICAgICBjdXJfdG9rZW5zID0gMAogICAgICAgIG1heF9pbnB1dCA9IHNlbGYubWF4X2N0eCAtIHNlbGYuZ3VhcmRyYWlsIC0gc2VsZi5yZXNwX3Blcl9pdGVtIC0gc2VsZi5iYXRjaF9vdmVyaGVhZF90b2tlbnMKCiAgICAgICAgZm9yIGl0IGluIGl0ZW1zOgogICAgICAgICAgICB0ID0gc2VsZi5lc3RpbWF0ZShzZXJpYWxpemVfZm4oW2l0XSkpCiAgICAgICAgICAgIGlmIHQgPiBtYXhfaW5wdXQ6CiAgICAgICAgICAgICAgICAjIGZvcmNlIHNpbmdsZS1pdGVtIGJhdGNoIHJhdGhlciB0aGFuIG92ZXJmbG93CiAgICAgICAgICAgICAgICBiYXRjaGVzLmFwcGVuZChbaXRdKQogICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgbmV4dF9yZXNwID0gc2VsZi5yZXNwX3Blcl9pdGVtICogKGxlbihjdXIpICsgMSkKICAgICAgICAgICAgYXZhaWwgPSBzZWxmLm1heF9jdHggLSBzZWxmLmd1YXJkcmFpbCAtIG5leHRfcmVzcCAtIHNlbGYuYmF0Y2hfb3ZlcmhlYWRfdG9rZW5zCiAgICAgICAgICAgIGlmIGN1ciBhbmQgKGN1cl90b2tlbnMgKyB0KSA+IGF2YWlsOgogICAgICAgICAgICAgICAgYmF0Y2hlcy5hcHBlbmQoY3VyKTsgY3VyID0gW107IGN1cl90b2tlbnMgPSAwCiAgICAgICAgICAgIGN1ci5hcHBlbmQoaXQpOyBjdXJfdG9rZW5zICs9IHQKCiAgICAgICAgaWYgY3VyOgogICAgICAgICAgICBiYXRjaGVzLmFwcGVuZChjdXIpCiAgICAgICAgcmV0dXJuIGJhdGNoZXMK", "path": "output/patch_code_bundles/backend/core/prompt_pipeline/preflight/budget.py", "sha256_chunk": "738386a267a0c24089cb8a3c6dd97e0c6163e10164fab1a1d57470d639821840", "sha256_file": "738386a267a0c24089cb8a3c6dd97e0c6163e10164fab1a1d57470d639821840", "type": "file_chunk"}
{"byte_end": 52, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IiIiQ29yZSBwcmltaXRpdmVzOiBlcnJvcnMsIHR5cGVzLCBidWRnZXQsIGxvZ3MuIiIiCg==", "path": "output/patch_code_bundles/backend/core/types/__init__.py", "sha256_chunk": "70fd98b1c6d663e0238a8c065f20af6454a5c985ed8cf94a50535f9b064f89f8", "sha256_file": "70fd98b1c6d663e0238a8c065f20af6454a5c985ed8cf94a50535f9b064f89f8", "type": "file_chunk"}
{"byte_end": 1349, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwpmcm9tIHR5cGluZyBpbXBvcnQgVHlwZWREaWN0LCBOb3RSZXF1aXJlZCwgTGlzdCwgRGljdAoKY2xhc3MgRGJSb3coVHlwZWREaWN0KToKICAgIGlkOiBpbnQKICAgIGZpbGVwYXRoOiBzdHIKICAgIHN5bWJvbF90eXBlOiBzdHIKICAgIG5hbWU6IHN0ciB8IE5vbmUKICAgIGxpbmVubzogaW50IHwgTm9uZQogICAgdW5pcXVlX2tleV9oYXNoOiBzdHIgfCBOb25lCiAgICBkZXNjcmlwdGlvbjogc3RyIHwgTm9uZQoKY2xhc3MgU3VzcGVjdChUeXBlZERpY3QpOgogICAgaWQ6IHN0ciAgICAgICAgICAgICAgICAgIyBjYW5vbmljYWwgc3RhYmxlIGlkICh1bmlxdWVfa2V5X2hhc2ggb3IgY29tcHV0ZWQpCiAgICBwYXRoOiBzdHIgICAgICAgICAgICAgICAjIGFic29sdXRlIHBhdGgKICAgIHJlbHBhdGg6IHN0ciAgICAgICAgICAgICMgcGF0aCByZWxhdGl2ZSB0byBwcm9qZWN0IHJvb3QKICAgIGxpbmVubzogaW50ICAgICAgICAgICAgICMgaGludCBsaW5lIGZyb20gREIgKG1heSBiZSAwL05vbmUpCiAgICB0YXJnZXRfbGluZW5vOiBpbnQgICAgICAjIEFTVC1kZXRlY3RlZCBleGFjdCBub2RlIGxpbmVubyAobW9kdWxlPTEpCiAgICBzeW1ib2xfdHlwZTogc3RyICAgICAgICAjIG1vZHVsZSB8IGNsYXNzIHwgZnVuY3Rpb24gfCByb3V0ZSB8IC4uLgogICAgc3ltYm9sOiBzdHIgICAgICAgICAgICAgIyBzaW1wbGUvZG90dGVkIG5hbWUKICAgIGRvY3N0cmluZzogc3RyICAgICAgICAgICMgZnVsbCBjdXJyZW50IGRvY3N0cmluZyAobWF5IGJlIGVtcHR5KQogICAgc2lnbmF0dXJlOiBzdHIgICAgICAgICAgIyBkZWYvY2xhc3Mgc2lnbmF0dXJlCiAgICBwcmVfY29udGV4dDogc3RyICAgICAgICAjIHNtYWxsIHdpbmRvdyBiZWZvcmUKICAgIHBvc3RfY29udGV4dDogc3RyICAgICAgICMgc21hbGwgd2luZG93IGFmdGVyCgpjbGFzcyBCYXRjaEl0ZW0oVHlwZWREaWN0KToKICAgIGlkOiBzdHIKICAgIHBhdGg6IHN0cgogICAgcmVscGF0aDogc3RyCiAgICBzaWduYXR1cmU6IHN0cgogICAgY3VycmVudF9kb2NzdHJpbmc6IHN0cgogICAgbG9jYWxfY29udGV4dDogc3RyCiAgICB0YXJnZXRfbGluZW5vOiBpbnQKCmNsYXNzIFBhcnNlZFJlc3VsdChUeXBlZERpY3QpOgogICAgaWQ6IHN0cgogICAgZG9jc3RyaW5nOiBzdHIKICAgIG5vdGVzOiBOb3RSZXF1aXJlZFtzdHJdCgpjbGFzcyBQcm9tcHRQYXlsb2FkKFR5cGVkRGljdCk6CiAgICBzeXN0ZW06IHN0cgogICAgdXNlcjogc3RyCgpjbGFzcyBQcm9tcHRCdW5kbGUoVHlwZWREaWN0KToKICAgIGlkczogTGlzdFtzdHJdCiAgICBtZXNzYWdlczogUHJvbXB0UGF5bG9hZAo=", "path": "output/patch_code_bundles/backend/core/types/types.py", "sha256_chunk": "5cd9b3b3b4615aeddadd12c06f8f7e4b42775ef48612f8f59f48b184ea7bf569", "sha256_file": "5cd9b3b3b4615aeddadd12c06f8f7e4b42775ef48612f8f59f48b184ea7bf569", "type": "file_chunk"}
{"byte_end": 52, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IiIiQ29yZSBwcmltaXRpdmVzOiBlcnJvcnMsIHR5cGVzLCBidWRnZXQsIGxvZ3MuIiIiCg==", "path": "output/patch_code_bundles/backend/core/utils/__init__.py", "sha256_chunk": "70fd98b1c6d663e0238a8c065f20af6454a5c985ed8cf94a50535f9b064f89f8", "sha256_file": "70fd98b1c6d663e0238a8c065f20af6454a5c985ed8cf94a50535f9b064f89f8", "type": "file_chunk"}
{"byte_end": 0, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/__init__.py", "sha256_chunk": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "sha256_file": "e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855", "type": "file_chunk"}
{"byte_end": 3969, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IyBidW5kbGVfaW8ucHkKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGhhc2hsaWIKaW1wb3J0IG9zCmZyb20gZGF0YWNsYXNzZXMgaW1wb3J0IGRhdGFjbGFzcwpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKZnJvbSB0eXBpbmcgaW1wb3J0IENhbGxhYmxlLCBJdGVyYWJsZSwgTGlzdCwgT3B0aW9uYWwKCl9fYWxsX18gPSBbIkZpbGVSZWMiLCAiQnVuZGxlSU8iLCAicmVhZF9mb2xkZXIiXQoKCkBkYXRhY2xhc3MoZnJvemVuPVRydWUpCmNsYXNzIEZpbGVSZWM6CiAgICAiIiIKICAgIEEgc2luZ2xlIGZpbGUgcmVjb3JkIHN1aXRhYmxlIGZvciBwYWNraW5nIGludG8gYSBidW5kbGUuCgogICAgQXR0cmlidXRlczoKICAgICAgICBwYXRoOiAgIFBPU0lYLXN0eWxlIHJlbGF0aXZlIHBhdGggdXNlZCBpbnNpZGUgdGhlIGJ1bmRsZS4KICAgICAgICBkYXRhOiAgIFJhdyBmaWxlIGJ5dGVzLgogICAgICAgIHNoYTI1NjogSGV4IGRpZ2VzdCBvZiBgZGF0YWAgKGxvd2VyY2FzZSkuCiAgICAiIiIKICAgIHBhdGg6IHN0cgogICAgZGF0YTogYnl0ZXMKICAgIHNoYTI1Njogc3RyCgoKY2xhc3MgQnVuZGxlSU86CiAgICAiIiIKICAgIE1pbmltYWwgZmlsZSBpbmdlc3Rpb24gaGVscGVycyBmb3IgYnVuZGxlIGNvbnN0cnVjdGlvbi4KCiAgICBOb3RlcwogICAgLS0tLS0KICAgIC0gRGV0ZXJtaW5pc3RpYyB0cmF2ZXJzYWw6IGRpcmVjdG9yeSBuYW1lcyBhbmQgZmlsZW5hbWVzIGFyZSBzb3J0ZWQuCiAgICAtIFVucmVhZGFibGUgZmlsZXMgYXJlIHNraXBwZWQgKGJlc3QtZWZmb3J0IGJlaGF2aW9yIG1hdGNoZXMgb3JpZ2luYWwpLgogICAgLSBgcHJlZml4YCBpcyBjb25jYXRlbmF0ZWQgZXhhY3RseSBsaWtlIHRoZSBvcmlnaW5hbCBpbXBsZW1lbnRhdGlvbi4KICAgICIiIgoKICAgIEBzdGF0aWNtZXRob2QKICAgIGRlZiBub3JtYWxpemVfcGF0aChwOiBzdHIpIC0+IHN0cjoKICAgICAgICAiIiIKICAgICAgICBOb3JtYWxpemUgYSBmaWxlc3lzdGVtIHBhdGggdG8gYSBQT1NJWC1zdHlsZSwgYnVuZGxlLWludGVybmFsIHBhdGguCiAgICAgICAgTWlycm9ycyBvcmlnaW5hbCBiZWhhdmlvcjogYmFja3NsYXNoZXMg4oaSICcvJywgc3RyaXAgbGVhZGluZyAnLi8nLgogICAgICAgICIiIgogICAgICAgIHJldHVybiBwLnJlcGxhY2UoIlxcIiwgIi8iKS5sc3RyaXAoIi4vIikKCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgcmVhZF9mb2xkZXIoCiAgICAgICAgcm9vdDogUGF0aCwKICAgICAgICAqLAogICAgICAgIHByZWZpeDogc3RyID0gIiIsCiAgICAgICAgZm9sbG93X3N5bWxpbmtzOiBib29sID0gRmFsc2UsCiAgICAgICAgaW5jbHVkZTogT3B0aW9uYWxbQ2FsbGFibGVbW1BhdGhdLCBib29sXV0gPSBOb25lLAogICAgICAgIGV4Y2x1ZGU6IE9wdGlvbmFsW0NhbGxhYmxlW1tQYXRoXSwgYm9vbF1dID0gTm9uZSwKICAgICkgLT4gTGlzdFtGaWxlUmVjXToKICAgICAgICAiIiIKICAgICAgICBSZWFkIGFsbCBmaWxlcyB1bmRlciBgcm9vdGAgaW50byBGaWxlUmVjIGVudHJpZXMuCgogICAgICAgIEFyZ3M6CiAgICAgICAgICAgIHJvb3Q6IEJhc2UgZGlyZWN0b3J5IHRvIHdhbGsuCiAgICAgICAgICAgIHByZWZpeDogU3RyaW5nIHByZXBlbmRlZCB0byBlYWNoIHJlbGF0aXZlIHBhdGggKHVuY2hhbmdlZCBmcm9tIG9yaWdpbmFsKS4KICAgICAgICAgICAgZm9sbG93X3N5bWxpbmtzOiBXaGV0aGVyIHRvIGZvbGxvdyBzeW1saW5rcyBpbiB0cmF2ZXJzYWwgKGRlZmF1bHQgRmFsc2UpLgogICAgICAgICAgICBpbmNsdWRlOiBPcHRpb25hbCBwcmVkaWNhdGUocGF0aCkgLT4gYm9vbDsgaWYgcHJvdmlkZWQsIG9ubHkgZmlsZXMgd2l0aAogICAgICAgICAgICAgICAgICAgICBpbmNsdWRlKHBhdGgpID09IFRydWUgYXJlIGtlcHQuCiAgICAgICAgICAgIGV4Y2x1ZGU6IE9wdGlvbmFsIHByZWRpY2F0ZShwYXRoKSAtPiBib29sOyBpZiBwcm92aWRlZCwgZmlsZXMgZm9yIHdoaWNoCiAgICAgICAgICAgICAgICAgICAgIGV4Y2x1ZGUocGF0aCkgPT0gVHJ1ZSBhcmUgc2tpcHBlZC4KCiAgICAgICAgUmV0dXJuczoKICAgICAgICAgICAgTGlzdFtGaWxlUmVjXSB3aXRoIGRldGVybWluaXN0aWMgb3JkZXJpbmcgYnkgcmVsYXRpdmUgcGF0aC4KICAgICAgICAiIiIKICAgICAgICBmaWxlczogTGlzdFtGaWxlUmVjXSA9IFtdCiAgICAgICAgcm9vdCA9IHJvb3QucmVzb2x2ZSgpCgogICAgICAgICMgb3Mud2FsayB5aWVsZHMgbm90aGluZyBpZiByb290IGRvZXNuJ3QgZXhpc3QgLT4gY29uc2lzdGVudCB3aXRoIG9yaWdpbmFsLgogICAgICAgIGZvciBkaXJwYXRoLCBkaXJuYW1lcywgZmlsZW5hbWVzIGluIG9zLndhbGsocm9vdCwgZm9sbG93bGlua3M9Zm9sbG93X3N5bWxpbmtzKToKICAgICAgICAgICAgIyBEZXRlcm1pbmlzdGljIG9yZGVyCiAgICAgICAgICAgIGRpcm5hbWVzLnNvcnQoKQogICAgICAgICAgICBmaWxlbmFtZXMuc29ydCgpCgogICAgICAgICAgICBmb3IgZm4gaW4gZmlsZW5hbWVzOgogICAgICAgICAgICAgICAgcCA9IFBhdGgoZGlycGF0aCkgLyBmbgogICAgICAgICAgICAgICAgaWYgZXhjbHVkZSBhbmQgZXhjbHVkZShwKToKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgaWYgaW5jbHVkZSBhbmQgbm90IGluY2x1ZGUocCk6CiAgICAgICAgICAgICAgICAgICAgY29udGludWUKICAgICAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgICAgICBkYXRhID0gcC5yZWFkX2J5dGVzKCkKICAgICAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgICAgICAgICAgIyBCZXN0LWVmZm9ydDogc2tpcCB1bnJlYWRhYmxlIGZpbGVzCiAgICAgICAgICAgICAgICAgICAgY29udGludWUKCiAgICAgICAgICAgICAgICByZWwgPSBmIntwLnJlbGF0aXZlX3RvKHJvb3QpfSIucmVwbGFjZSgiXFwiLCAiLyIpCiAgICAgICAgICAgICAgICAjIEtlZXAgZXhhY3Qgb3JpZ2luYWwgcHJlZml4IGJlaGF2aW9yIChubyBzbGFzaCBmaXhpbmcgaGVyZSkKICAgICAgICAgICAgICAgIGJ1bmRsZV9wYXRoID0gZiJ7cHJlZml4fXtyZWx9IgogICAgICAgICAgICAgICAgZmlsZXMuYXBwZW5kKAogICAgICAgICAgICAgICAgICAgIEZpbGVSZWMoCiAgICAgICAgICAgICAgICAgICAgICAgIHBhdGg9QnVuZGxlSU8ubm9ybWFsaXplX3BhdGgoYnVuZGxlX3BhdGgpLAogICAgICAgICAgICAgICAgICAgICAgICBkYXRhPWRhdGEsCiAgICAgICAgICAgICAgICAgICAgICAgIHNoYTI1Nj1oYXNobGliLnNoYTI1NihkYXRhKS5oZXhkaWdlc3QoKSwKICAgICAgICAgICAgICAgICAgICApCiAgICAgICAgICAgICAgICApCgogICAgICAgICMgRGV0ZXJtaW5pc3RpYyBvdXRwdXQgb3JkZXJpbmcgYnkgcGF0aCAodXNlIHNhbWUgbm9ybWFsaXplZCBwYXRoIHdlIGVtaXQpCiAgICAgICAgZmlsZXMuc29ydChrZXk9bGFtYmRhIGZyOiBmci5wYXRoKQogICAgICAgIHJldHVybiBmaWxlcwoKCiMgLS0tLS0tLS0tLS0tLSBsZWdhY3kgc2hpbXMgKGJhY2t3YXJkcyBjb21wYXRpYmxlIEFQSSkgLS0tLS0tLS0tLS0tLQoKZGVmIF9ub3JtYWxpemVfcGF0aChwOiBzdHIpIC0+IHN0cjoKICAgICIiIkJhY2t3YXJkLWNvbXBhdGlibGUgYWxpYXM7IHByZWZlciBCdW5kbGVJTy5ub3JtYWxpemVfcGF0aCgpLiIiIgogICAgcmV0dXJuIEJ1bmRsZUlPLm5vcm1hbGl6ZV9wYXRoKHApCgpkZWYgcmVhZF9mb2xkZXIocm9vdDogUGF0aCwgcHJlZml4OiBzdHIgPSAiIikgLT4gTGlzdFtGaWxlUmVjXToKICAgICIiIgogICAgQmFja3dhcmRzLWNvbXBhdGlibGUgd3JhcHBlciBmb3IgdGhlIG9yaWdpbmFsIGZyZWUgZnVuY3Rpb24uCiAgICBVc2VzIGRlZmF1bHQgYmVoYXZpb3IgKG5vIHN5bWxpbmtzLCBubyBpbmNsdWRlL2V4Y2x1ZGUgcHJlZGljYXRlcykuCiAgICAiIiIKICAgIHJldHVybiBCdW5kbGVJTy5yZWFkX2ZvbGRlcihyb290LCBwcmVmaXg9cHJlZml4KQoK", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/bundle_io.py", "sha256_chunk": "43cbec31dcf4736af30e849b68fe150bc7414d2d1312df58282175c659dc4646", "sha256_file": "43cbec31dcf4736af30e849b68fe150bc7414d2d1312df58282175c659dc4646", "type": "file_chunk"}
{"byte_end": 3791, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IyBjb250cmFjdHMucHkKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKaW1wb3J0IGhhc2hsaWIKaW1wb3J0IGpzb24KaW1wb3J0IHRpbWUKZnJvbSB0eXBpbmcgaW1wb3J0IEFueSwgRGljdCwgTGlzdAoKZnJvbSBidW5kbGVfaW8gaW1wb3J0IEZpbGVSZWMKCl9fYWxsX18gPSBbIkNvbnRyYWN0cyIsICJnZXRfc2NoZW1hcyIsICJidWlsZF9ydW5fbWFuaWZlc3QiLCAiYnVpbGRfcHJvdmVuYW5jZSJdCgoKY2xhc3MgQ29udHJhY3RzOgogICAgIiIiCiAgICBDb250cmFjdHMgYW5kIGFydGlmYWN0cyBmb3IgcnVuIG1hbmlmZXN0cyBhbmQgcHJvcG9zYWwgc2NoZW1hcy4KICAgIE1pcnJvcnMgdGhlIG9yaWdpbmFsIG1vZHVsZSdzIGJlaGF2aW9yIGFuZCBvdXRwdXQgc2hhcGVzLgogICAgIiIiCgogICAgIyAtLS0tLS0tLS0tIHNjaGVtYXMgLS0tLS0tLS0tLQoKICAgIEBzdGF0aWNtZXRob2QKICAgIGRlZiBnZXRfc2NoZW1hcygpIC0+IERpY3Rbc3RyLCBkaWN0XToKICAgICAgICBwcm9wb3NhbHMgPSB7CiAgICAgICAgICAgICIkc2NoZW1hIjogImh0dHBzOi8vanNvbi1zY2hlbWEub3JnL2RyYWZ0LzIwMjAtMTIvc2NoZW1hIiwKICAgICAgICAgICAgInRpdGxlIjogIlByb3Bvc2FsIiwKICAgICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICAgInJlcXVpcmVkIjogWyJpdGVtX2lkIiwgImZpbGVwYXRoIiwgImxpbmVubyIsICJkb2NzdHJpbmciXSwKICAgICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICAgICAiaXRlbV9pZCI6IHsidHlwZSI6ICJpbnRlZ2VyIn0sCiAgICAgICAgICAgICAgICAiZmlsZXBhdGgiOiB7InR5cGUiOiAic3RyaW5nIn0sCiAgICAgICAgICAgICAgICAibGluZW5vIjogeyJ0eXBlIjogImludGVnZXIifSwKICAgICAgICAgICAgICAgICJkb2NzdHJpbmciOiB7InR5cGUiOiAic3RyaW5nIn0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IFRydWUsCiAgICAgICAgfQogICAgICAgIG1hbmlmZXN0ID0gewogICAgICAgICAgICAiJHNjaGVtYSI6ICJodHRwczovL2pzb24tc2NoZW1hLm9yZy9kcmFmdC8yMDIwLTEyL3NjaGVtYSIsCiAgICAgICAgICAgICJ0aXRsZSI6ICJSdW4gTWFuaWZlc3QiLAogICAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgICAicmVxdWlyZWQiOiBbImNyZWF0ZWRfYXQiLCAiaW5wdXRzX3NoYSIsICJvdXRwdXRzX2luZGV4Il0sCiAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgImNyZWF0ZWRfYXQiOiB7InR5cGUiOiAiaW50ZWdlciJ9LAogICAgICAgICAgICAgICAgImlucHV0c19zaGEiOiB7InR5cGUiOiAic3RyaW5nIn0sCiAgICAgICAgICAgICAgICAib3V0cHV0c19pbmRleCI6IHsidHlwZSI6ICJhcnJheSJ9LAogICAgICAgICAgICAgICAgImlucHV0c19pbmRleCI6IHsidHlwZSI6ICJhcnJheSJ9LAogICAgICAgICAgICAgICAgImNvZGViYXNlX3Jvb3QiOiB7InR5cGUiOiAic3RyaW5nIn0sCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IFRydWUsCiAgICAgICAgfQogICAgICAgIHJldHVybiB7InByb3Bvc2FscyI6IHByb3Bvc2FscywgIm1hbmlmZXN0IjogbWFuaWZlc3R9CgogICAgIyAtLS0tLS0tLS0tIGJ1aWxkZXJzIC0tLS0tLS0tLS0KCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgYnVpbGRfcnVuX21hbmlmZXN0KAogICAgICAgICosIGlucHV0czogTGlzdFtGaWxlUmVjXSwgb3V0cHV0czogRGljdFtzdHIsIEFueV0sIGNvZGViYXNlX3Jvb3Q6IHN0ciA9ICJ2Mi9wYXRjaGVzL291dHB1dC9wYXRjaF9jb2RlX2J1bmRsZXMvIgogICAgKSAtPiBEaWN0W3N0ciwgQW55XToKICAgICAgICAiIiIKICAgICAgICBDcmVhdGUgYSBzdGFibGUgcnVuIG1hbmlmZXN0IHNuYXBzaG90LgoKICAgICAgICBpbnB1dHM6ICBsaXN0IG9mIEZpbGVSZWMgKHBhdGgsIGRhdGEsIHNoYTI1NikKICAgICAgICBvdXRwdXRzOiBtYXBwaW5nIG9mIHJlbGF0aXZlIHBhdGggLT4gSlNPTi1zZXJpYWxpemFibGUgb2JqZWN0CiAgICAgICAgIiIiCiAgICAgICAgaCA9IGhhc2hsaWIuc2hhMjU2KCkKCiAgICAgICAgIyBpbnB1dHNfaW5kZXggKGRldGVybWluaXN0aWMgYnkgcGF0aCkKICAgICAgICBpbnB1dHNfaW5kZXg6IExpc3RbRGljdFtzdHIsIEFueV1dID0gW10KICAgICAgICBmb3IgZnIgaW4gc29ydGVkKGlucHV0cywga2V5PWxhbWJkYSB4OiB4LnBhdGgpOgogICAgICAgICAgICBoLnVwZGF0ZShmci5wYXRoLmVuY29kZSgidXRmLTgiKSArIGIiXDAiICsgZnIuc2hhMjU2LmVuY29kZSgiYXNjaWkiKSArIGIiXG4iKQogICAgICAgICAgICBpbnB1dHNfaW5kZXguYXBwZW5kKHsicGF0aCI6IGZyLnBhdGgsICJzaGEyNTYiOiBmci5zaGEyNTYsICJzaXplIjogbGVuKGZyLmRhdGEpfSkKCiAgICAgICAgIyBvdXRwdXRzX2luZGV4IChkZXRlcm1pbmlzdGljIGJ5IHJlbCBwYXRoKQogICAgICAgIG91dHB1dHNfaW5kZXg6IExpc3RbRGljdFtzdHIsIHN0cl1dID0gW10KICAgICAgICBmb3IgcmVsLCBvYmogaW4gc29ydGVkKG91dHB1dHMuaXRlbXMoKSk6CiAgICAgICAgICAgIHBheWxvYWQgPSBqc29uLmR1bXBzKG9iaiwgc29ydF9rZXlzPVRydWUsIGVuc3VyZV9hc2NpaT1GYWxzZSkuZW5jb2RlKCJ1dGYtOCIpCiAgICAgICAgICAgIHNoYSA9IGhhc2hsaWIuc2hhMjU2KHBheWxvYWQpLmhleGRpZ2VzdCgpCiAgICAgICAgICAgIG91dHB1dHNfaW5kZXguYXBwZW5kKHsicGF0aCI6IHJlbCwgInNoYTI1NiI6IHNoYX0pCgogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICJjcmVhdGVkX2F0IjogaW50KHRpbWUudGltZSgpKSwKICAgICAgICAgICAgImNvZGViYXNlX3Jvb3QiOiBjb2RlYmFzZV9yb290LAogICAgICAgICAgICAiaW5wdXRzX3NoYSI6IGguaGV4ZGlnZXN0KCksCiAgICAgICAgICAgICJpbnB1dHNfaW5kZXgiOiBpbnB1dHNfaW5kZXgsCiAgICAgICAgICAgICJvdXRwdXRzX2luZGV4Ijogb3V0cHV0c19pbmRleCwKICAgICAgICB9CgogICAgQHN0YXRpY21ldGhvZAogICAgZGVmIGJ1aWxkX3Byb3ZlbmFuY2UobWFuaWZlc3Q6IERpY3Rbc3RyLCBBbnldKSAtPiBEaWN0W3N0ciwgQW55XToKICAgICAgICAiIiJUaGluIHdyYXBwZXIgdG8gZXhwb3NlIGFydGlmYWN0cyBmcm9tIGEgbWFuaWZlc3QuIiIiCiAgICAgICAgcmV0dXJuIHsiYXJ0aWZhY3RzIjogbWFuaWZlc3QuZ2V0KCJvdXRwdXRzX2luZGV4IiwgW10pfQoKCiMgLS0tLS0tLS0tLSBsZWdhY3kgZnVuY3Rpb24gc2hpbXMgKGJhY2t3YXJkcy1jb21wYXRpYmxlIEFQSSkgLS0tLS0tLS0tLQoKZGVmIGdldF9zY2hlbWFzKCkgLT4gRGljdFtzdHIsIGRpY3RdOgogICAgcmV0dXJuIENvbnRyYWN0cy5nZXRfc2NoZW1hcygpCgpkZWYgYnVpbGRfcnVuX21hbmlmZXN0KCosIGlucHV0czogTGlzdFtGaWxlUmVjXSwgb3V0cHV0czogRGljdFtzdHIsIEFueV0sIGNvZGViYXNlX3Jvb3Q6IHN0ciA9ICJ2Mi9wYXRjaGVzL291dHB1dC9wYXRjaF9jb2RlX2J1bmRsZXMvIikgLT4gRGljdFtzdHIsIEFueV06CiAgICByZXR1cm4gQ29udHJhY3RzLmJ1aWxkX3J1bl9tYW5pZmVzdChpbnB1dHM9aW5wdXRzLCBvdXRwdXRzPW91dHB1dHMsIGNvZGViYXNlX3Jvb3Q9Y29kZWJhc2Vfcm9vdCkKCmRlZiBidWlsZF9wcm92ZW5hbmNlKG1hbmlmZXN0OiBEaWN0W3N0ciwgQW55XSkgLT4gRGljdFtzdHIsIEFueV06CiAgICByZXR1cm4gQ29udHJhY3RzLmJ1aWxkX3Byb3ZlbmFuY2UobWFuaWZlc3QpCgo=", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/contracts.py", "sha256_chunk": "f36d3de0db6867df5a0a9edc9eda7519471077ccbe0512172a5b333a9d1e269c", "sha256_file": "f36d3de0db6867df5a0a9edc9eda7519471077ccbe0512172a5b333a9d1e269c", "type": "file_chunk"}
{"byte_end": 6640, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/graphs.py", "sha256_chunk": "3fa54e586ecb04a885247d359ed6265c252649b6794717823e1ee7e37ad13eb7", "sha256_file": "3fa54e586ecb04a885247d359ed6265c252649b6794717823e1ee7e37ad13eb7", "type": "file_chunk"}
{"byte_end": 2995, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IyBub3JtYWxpemUucHkKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKZnJvbSBkYXRhY2xhc3NlcyBpbXBvcnQgZGF0YWNsYXNzCmZyb20gdHlwaW5nIGltcG9ydCBMaXN0CmltcG9ydCBoYXNobGliCgpmcm9tIGJ1bmRsZV9pbyBpbXBvcnQgRmlsZVJlYwoKCkBkYXRhY2xhc3MoZnJvemVuPVRydWUpCmNsYXNzIE5vcm1hbGl6YXRpb25SdWxlczoKICAgICIiIgogICAgTm9ybWFsaXphdGlvbiBydWxlcyBhcHBsaWVkIHRvIHRleHQtbGlrZSBmaWxlcy4KCiAgICBuZXdsaW5lX3BvbGljeTogJ2xmJyBvciAnY3JsZicKICAgIGVuY29kaW5nOiAgICAgICB0ZXh0IGVuY29kaW5nIHVzZWQgdG8gZGVjb2RlL2VuY29kZSBieXRlcyAoYmVzdC1lZmZvcnQpCiAgICBzdHJpcF90cmFpbGluZ193czoKICAgICAgICAtIElmIFRydWU6IHN0cmlwIHRyYWlsaW5nIHdoaXRlc3BhY2Ugb24gZWFjaCBsaW5lIGFuZCBlbnN1cmUgYQogICAgICAgICAgc2luZ2xlIHRyYWlsaW5nIG5ld2xpbmUgYXQgRU9GIChpZiB0aGUgZmlsZSBpcyBub24tZW1wdHkpLgogICAgZXhjbHVkZWRfcGF0aHM6CiAgICAgICAgLSBUdXBsZSBvZiBjYXNlLWluc2Vuc2l0aXZlIHBhdGggKnByZWZpeGVzKiB0byBza2lwIG5vcm1hbGl6YXRpb24KICAgICAgICAgIGZvciAoZXZhbHVhdGlvbiBoYXBwZW5zIGFnYWluc3QgdGhlIGVtaXR0ZWQsIHBvc2l4LXN0eWxlIHBhdGgpLgogICAgIiIiCiAgICBuZXdsaW5lX3BvbGljeTogc3RyID0gImxmIgogICAgZW5jb2Rpbmc6IHN0ciA9ICJ1dGYtOCIKICAgIHN0cmlwX3RyYWlsaW5nX3dzOiBib29sID0gVHJ1ZQogICAgZXhjbHVkZWRfcGF0aHM6IHR1cGxlW3N0ciwgLi4uXSA9ICgpCgoKY2xhc3MgTm9ybWFsaXplcjoKICAgICIiIgogICAgQ2xhc3MtYmFzZWQgbm9ybWFsaXplciB0aGF0IG1pcnJvcnMgdGhlIG9yaWdpbmFsIG1vZHVsZeKAmXMgYmVoYXZpb3IuCgogICAgVXNhZ2U6CiAgICAgICAgbiA9IE5vcm1hbGl6ZXIocnVsZXMpCiAgICAgICAgb3V0X2ZpbGVzID0gbi5hcHBseShmaWxlcykKICAgICIiIgoKICAgIGRlZiBfX2luaXRfXyhzZWxmLCBydWxlczogTm9ybWFsaXphdGlvblJ1bGVzKSAtPiBOb25lOgogICAgICAgIHNlbGYucnVsZXMgPSBydWxlcwoKICAgICMgLS0tLS0tLS0tLSBwdWJsaWMgQVBJIC0tLS0tLS0tLS0KCiAgICBkZWYgYXBwbHkoc2VsZiwgZmlsZXM6IExpc3RbRmlsZVJlY10pIC0+IExpc3RbRmlsZVJlY106CiAgICAgICAgb3V0OiBMaXN0W0ZpbGVSZWNdID0gW10KICAgICAgICBmb3IgZnIgaW4gZmlsZXM6CiAgICAgICAgICAgIGlmIHNlbGYuX3Nob3VsZF9za2lwKGZyLnBhdGgpOgogICAgICAgICAgICAgICAgb3V0LmFwcGVuZChmcikKICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgIHRyeToKICAgICAgICAgICAgICAgIHR4dCA9IHNlbGYuX3RvX3RleHQoZnIuZGF0YSkKICAgICAgICAgICAgZXhjZXB0IEV4Y2VwdGlvbjoKICAgICAgICAgICAgICAgICMgTm9uLWRlY29kYWJsZSAtPiBsZWF2ZSBhcy1pcwogICAgICAgICAgICAgICAgb3V0LmFwcGVuZChmcikKICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICBpZiBzZWxmLnJ1bGVzLnN0cmlwX3RyYWlsaW5nX3dzOgogICAgICAgICAgICAgICAgIyBTdHJpcCB0cmFpbGluZyB3aGl0ZXNwYWNlIHBlciBsaW5lIGFuZCBlbnN1cmUgc2luZ2xlIHRyYWlsaW5nIFxuCiAgICAgICAgICAgICAgICB0eHQgPSAiXG4iLmpvaW4obGluZS5yc3RyaXAoKSBmb3IgbGluZSBpbiB0eHQuc3BsaXRsaW5lcygpKQogICAgICAgICAgICAgICAgaWYgdHh0IGFuZCBub3QgdHh0LmVuZHN3aXRoKCJcbiIpOgogICAgICAgICAgICAgICAgICAgIHR4dCArPSAiXG4iCgogICAgICAgICAgICBibG9iID0gc2VsZi5fZnJvbV90ZXh0KHR4dCkKICAgICAgICAgICAgb3V0LmFwcGVuZChGaWxlUmVjKHBhdGg9ZnIucGF0aCwgZGF0YT1ibG9iLCBzaGEyNTY9aGFzaGxpYi5zaGEyNTYoYmxvYikuaGV4ZGlnZXN0KCkpKQogICAgICAgIHJldHVybiBvdXQKCiAgICAjIC0tLS0tLS0tLS0gaW50ZXJuYWxzIC0tLS0tLS0tLS0KCiAgICBkZWYgX3Nob3VsZF9za2lwKHNlbGYsIHBhdGg6IHN0cikgLT4gYm9vbDoKICAgICAgICBwYXRoX2xvd2VyID0gcGF0aC5sb3dlcigpCiAgICAgICAgcmV0dXJuIGFueShwYXRoX2xvd2VyLnN0YXJ0c3dpdGgocHJlZml4Lmxvd2VyKCkpIGZvciBwcmVmaXggaW4gc2VsZi5ydWxlcy5leGNsdWRlZF9wYXRocykKCiAgICBkZWYgX3RvX3RleHQoc2VsZiwgZGF0YTogYnl0ZXMpIC0+IHN0cjoKICAgICAgICByZXR1cm4gZGF0YS5kZWNvZGUoc2VsZi5ydWxlcy5lbmNvZGluZywgZXJyb3JzPSJyZXBsYWNlIikKCiAgICBkZWYgX2Zyb21fdGV4dChzZWxmLCB0ZXh0OiBzdHIpIC0+IGJ5dGVzOgogICAgICAgIGlmIHNlbGYucnVsZXMubmV3bGluZV9wb2xpY3kgPT0gImxmIjoKICAgICAgICAgICAgdGV4dCA9IHRleHQucmVwbGFjZSgiXHJcbiIsICJcbiIpLnJlcGxhY2UoIlxyIiwgIlxuIikKICAgICAgICBlbGlmIHNlbGYucnVsZXMubmV3bGluZV9wb2xpY3kgPT0gImNybGYiOgogICAgICAgICAgICB0ZXh0ID0gdGV4dC5yZXBsYWNlKCJcclxuIiwgIlxuIikucmVwbGFjZSgiXHIiLCAiXG4iKS5yZXBsYWNlKCJcbiIsICJcclxuIikKICAgICAgICAjIEFueSBvdGhlciB2YWx1ZTogbGVhdmUgbmV3bGluZXMgYXMtaXMKICAgICAgICByZXR1cm4gdGV4dC5lbmNvZGUoc2VsZi5ydWxlcy5lbmNvZGluZykKCgojIC0tLS0tLS0tIGxlZ2FjeSBzaGltIChrZWVwcyBleGlzdGluZyBjYWxsZXJzIHdvcmtpbmcpIC0tLS0tLS0tCgpkZWYgYXBwbHlfbm9ybWFsaXphdGlvbihmaWxlczogTGlzdFtGaWxlUmVjXSwgcnVsZXM6IE5vcm1hbGl6YXRpb25SdWxlcykgLT4gTGlzdFtGaWxlUmVjXToKICAgICIiIkJhY2t3YXJkLWNvbXBhdGlibGUgZnVuY3Rpb24gYWxpYXMuIiIiCiAgICByZXR1cm4gTm9ybWFsaXplcihydWxlcykuYXBwbHkoZmlsZXMpCg==", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/normalize.py", "sha256_chunk": "0ce630ee64275f784508d3a95ca211270a43f9dff18640677fd2eaad9abc5779", "sha256_file": "0ce630ee64275f784508d3a95ca211270a43f9dff18640677fd2eaad9abc5779", "type": "file_chunk"}
{"byte_end": 16292, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/orchestrate.py", "sha256_chunk": "f172022a5967f5d4b50cae6459e3bfdf2313cf9c8c2608e1f32577c0956c4f21", "sha256_file": "f172022a5967f5d4b50cae6459e3bfdf2313cf9c8c2608e1f32577c0956c4f21", "type": "file_chunk"}
{"byte_end": 5062, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IyBzcmMvcGFja2FnZXIvcGF0Y2hfcGFjay5weQpmcm9tIF9fZnV0dXJlX18gaW1wb3J0IGFubm90YXRpb25zCgppbXBvcnQgaGFzaGxpYgpmcm9tIGRhdGFjbGFzc2VzIGltcG9ydCBkYXRhY2xhc3MKZnJvbSB0eXBpbmcgaW1wb3J0IEFueSwgRGljdCwgTGlzdCwgSXRlcmFibGUKCmZyb20gYnVuZGxlX2lvIGltcG9ydCBGaWxlUmVjCgpfX2FsbF9fID0gWyJQYXRjaFBhY2siXQoKCkBkYXRhY2xhc3MoZnJvemVuPVRydWUpCmNsYXNzIF9DaHVuazoKICAgIGZpbGVfcGF0aDogc3RyCiAgICBiYXNlX3NoYTogc3RyCiAgICBieXRlX3N0YXJ0OiBpbnQKICAgIGJ5dGVfZW5kOiBpbnQKICAgIHN0YXJ0X2xpbmU6IGludAogICAgZW5kX2xpbmU6IGludAogICAgc2hhMjU2X2NodW5rOiBzdHIKCiAgICBkZWYgYXNfZGljdChzZWxmKSAtPiBEaWN0W3N0ciwgQW55XToKICAgICAgICByZXR1cm4gewogICAgICAgICAgICAiZmlsZV9wYXRoIjogc2VsZi5maWxlX3BhdGgsCiAgICAgICAgICAgICJiYXNlX3NoYSI6IHNlbGYuYmFzZV9zaGEsCiAgICAgICAgICAgICJieXRlX3N0YXJ0Ijogc2VsZi5ieXRlX3N0YXJ0LAogICAgICAgICAgICAiYnl0ZV9lbmQiOiBzZWxmLmJ5dGVfZW5kLAogICAgICAgICAgICAic3RhcnRfbGluZSI6IHNlbGYuc3RhcnRfbGluZSwKICAgICAgICAgICAgImVuZF9saW5lIjogc2VsZi5lbmRfbGluZSwKICAgICAgICAgICAgInNoYTI1Nl9jaHVuayI6IHNlbGYuc2hhMjU2X2NodW5rLAogICAgICAgIH0KCgpjbGFzcyBQYXRjaFBhY2s6CiAgICAiIiIKICAgIEJ1aWxkZXJzIGZvciBwYXRjaC9lbWJlZGRpbmcgYXJ0aWZhY3RzIHVzZWQgaW4gdGhlIHBhY2thZ2luZyBwaXBlbGluZS4KCiAgICBOb3RlcwogICAgLS0tLS0KICAgIC0gYGVtcHR5X3BhdGNoX3BhY2soLi4uKWAgbWlycm9ycyB5b3VyIGN1cnJlbnQgYmVoYXZpb3I6IGNyZWF0ZXMgYSBuby1vcAogICAgICB1bmlmaWVkIGRpZmYgcGVyIGZpbGUgKHVzZWZ1bCBhcyBhIHBsYWNlaG9sZGVyIGZvciBhZ2VudCB3b3JrZmxvd3MpLgogICAgLSBgYnVpbGRfcmFnX2NodW5rcyguLi4pYCBwcm9kdWNlcyBieXRlLXJhbmdlIGNodW5rcyB3aXRoIGJlc3QtZWZmb3J0CiAgICAgIFVURi04IGxpbmUgbWFwcGluZyAoZXJyb3JzIGlnbm9yZWQsIGlkZW50aWNhbCB0byB5b3VyIGN1cnJlbnQgbG9naWMpLgogICAgLSBgYnVpbGRfZW1iZWRkaW5nX2luZGV4KC4uLilgIGlzIGEgZGV0ZXJtaW5pc3RpYyBoYXNoLXRvLXZlY3RvciBzaGltCiAgICAgIChrZWVwcyB5b3VyIGV4aXN0aW5nIOKAnGhhc2gte2RpbX3igJ0gbW9kZWwgYmVoYXZpb3IpLgogICAgIiIiCgogICAgIyAtLS0tLS0tLS0tLS0tLS0tIHB1YmxpYyBBUEkgLS0tLS0tLS0tLS0tLS0tLQoKICAgIEBzdGF0aWNtZXRob2QKICAgIGRlZiBlbXB0eV9wYXRjaF9wYWNrKGZpbGVzOiBMaXN0W0ZpbGVSZWNdKSAtPiBEaWN0W3N0ciwgQW55XToKICAgICAgICAiIiIKICAgICAgICBDcmVhdGUgYSBuby1vcCBwYXRjaCBwYWNrIGZvciBhIHNldCBvZiBmaWxlcy4KCiAgICAgICAgUmV0dXJucwogICAgICAgIC0tLS0tLS0KICAgICAgICB7InBhdGNoZXMiOiBbeyJ0YXJnZXRfcGF0aCIsImJhc2Vfc2hhIiwibmV3X3NoYSIsImZvcm1hdCIsImRpZmZfdGV4dCJ9Li4uXX0KICAgICAgICAiIiIKICAgICAgICBwYXRjaGVzOiBMaXN0W0RpY3Rbc3RyLCBBbnldXSA9IFtdCiAgICAgICAgZm9yIGZyIGluIGZpbGVzOgogICAgICAgICAgICBwYXRjaGVzLmFwcGVuZCh7CiAgICAgICAgICAgICAgICAidGFyZ2V0X3BhdGgiOiBmci5wYXRoLAogICAgICAgICAgICAgICAgImJhc2Vfc2hhIjogZnIuc2hhMjU2LAogICAgICAgICAgICAgICAgIm5ld19zaGEiOiBmci5zaGEyNTYsCiAgICAgICAgICAgICAgICAiZm9ybWF0IjogInVuaWZpZWQiLAogICAgICAgICAgICAgICAgImRpZmZfdGV4dCI6ICIiLAogICAgICAgICAgICB9KQogICAgICAgIHJldHVybiB7InBhdGNoZXMiOiBwYXRjaGVzfQoKICAgIEBzdGF0aWNtZXRob2QKICAgIGRlZiBidWlsZF9yYWdfY2h1bmtzKGZpbGVzOiBMaXN0W0ZpbGVSZWNdLCAqLCBjaHVua19ieXRlczogaW50ID0gMjA0OCkgLT4gRGljdFtzdHIsIEFueV06CiAgICAgICAgIiIiCiAgICAgICAgU2xpY2UgVVRGLTggdGV4dCBmaWxlcyBpbnRvIGZpeGVkLXNpemUgYnl0ZSBjaHVua3Mgd2l0aCBsaW5lIG1ldGFkYXRhLgoKICAgICAgICBCZWhhdmlvciBtYXRjaGVzIHRoZSBvcmlnaW5hbDoKICAgICAgICAtIE5vbi1VVEYtOCBmaWxlcyBhcmUgc2tpcHBlZC4KICAgICAgICAtIExpbmUgbnVtYmVycyBjb21wdXRlZCBieSBkZWNvZGluZyB1cCB0byBwb3NpdGlvbnMgd2l0aCBlcnJvcnM9Imlnbm9yZSIuCgogICAgICAgIFJldHVybnMKICAgICAgICAtLS0tLS0tCiAgICAgICAgeyJjaHVua3MiOiBbIHtmaWxlX3BhdGgsIGJhc2Vfc2hhLCBieXRlX3N0YXJ0LCBieXRlX2VuZCwgc3RhcnRfbGluZSwgZW5kX2xpbmUsIHNoYTI1Nl9jaHVua30gLi4uIF19CiAgICAgICAgIiIiCiAgICAgICAgY2h1bmtzOiBMaXN0W19DaHVua10gPSBbXQogICAgICAgIGZvciBmciBpbiBmaWxlczoKICAgICAgICAgICAgIyBTa2lwIG5vbi10ZXh0IChzYW1lIGFzIHlvdXIgdHJ5L2V4Y2VwdCBzZW50aW5lbCkKICAgICAgICAgICAgdHJ5OgogICAgICAgICAgICAgICAgXyA9IGZyLmRhdGEuZGVjb2RlKCJ1dGYtOCIpCiAgICAgICAgICAgIGV4Y2VwdCBFeGNlcHRpb246CiAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgYiA9IGZyLmRhdGEKICAgICAgICAgICAgaSA9IDAKICAgICAgICAgICAgbiA9IGxlbihiKQogICAgICAgICAgICB3aGlsZSBpIDwgbjoKICAgICAgICAgICAgICAgIGogPSBtaW4oaSArIGNodW5rX2J5dGVzLCBuKQogICAgICAgICAgICAgICAgcGF5bG9hZCA9IGJbaTpqXQogICAgICAgICAgICAgICAgc2hhID0gaGFzaGxpYi5zaGEyNTYocGF5bG9hZCkuaGV4ZGlnZXN0KCkKCiAgICAgICAgICAgICAgICAjIEJlc3QtZWZmb3J0IGxpbmUgbWFwcGluZyAoa2VlcHMgb3JpZ2luYWwgYmVoYXZpb3IpCiAgICAgICAgICAgICAgICBzdWIgPSBiWzpqXS5kZWNvZGUoInV0Zi04IiwgZXJyb3JzPSJpZ25vcmUiKQogICAgICAgICAgICAgICAgZW5kX2xpbmUgPSBzdWIuY291bnQoIlxuIikgKyAxCiAgICAgICAgICAgICAgICBzdWIyID0gYls6aV0uZGVjb2RlKCJ1dGYtOCIsIGVycm9ycz0iaWdub3JlIikKICAgICAgICAgICAgICAgIHN0YXJ0X2xpbmUgPSBzdWIyLmNvdW50KCJcbiIpICsgMQoKICAgICAgICAgICAgICAgIGNodW5rcy5hcHBlbmQoX0NodW5rKAogICAgICAgICAgICAgICAgICAgIGZpbGVfcGF0aD1mci5wYXRoLAogICAgICAgICAgICAgICAgICAgIGJhc2Vfc2hhPWZyLnNoYTI1NiwKICAgICAgICAgICAgICAgICAgICBieXRlX3N0YXJ0PWksCiAgICAgICAgICAgICAgICAgICAgYnl0ZV9lbmQ9aiwKICAgICAgICAgICAgICAgICAgICBzdGFydF9saW5lPXN0YXJ0X2xpbmUsCiAgICAgICAgICAgICAgICAgICAgZW5kX2xpbmU9ZW5kX2xpbmUsCiAgICAgICAgICAgICAgICAgICAgc2hhMjU2X2NodW5rPXNoYSwKICAgICAgICAgICAgICAgICkpCiAgICAgICAgICAgICAgICBpID0gagoKICAgICAgICByZXR1cm4geyJjaHVua3MiOiBbYy5hc19kaWN0KCkgZm9yIGMgaW4gY2h1bmtzXX0KCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgYnVpbGRfZW1iZWRkaW5nX2luZGV4KGNodW5rczogRGljdFtzdHIsIEFueV0sICosIGRpbTogaW50ID0gNjQpIC0+IERpY3Rbc3RyLCBBbnldOgogICAgICAgICIiIgogICAgICAgIERldGVybWluaXN0aWMg4oCcaGFzaCBlbWJlZGRpbmfigJ0gZm9yIGVhY2ggY2h1bmsgKGNvbXBhdCB3aXRoIGN1cnJlbnQgYmVoYXZpb3IpLgoKICAgICAgICBSZXR1cm5zCiAgICAgICAgLS0tLS0tLQogICAgICAgIHsibW9kZWwiOiAiaGFzaC17ZGltfSIsICJkaW0iOiBkaW0sCiAgICAgICAgICJ2ZWN0b3JzIjogW3siY2h1bmtfaWQiOiAiPHBhdGg+OnN0YXJ0LWVuZCIsICJlbWJlZGRpbmciOiBbZmxvYXQsLi4uXX1dfQogICAgICAgICIiIgogICAgICAgIHZlY3RvcnM6IExpc3RbRGljdFtzdHIsIEFueV1dID0gW10KICAgICAgICBmb3IgY2ggaW4gY2h1bmtzLmdldCgiY2h1bmtzIiwgW10pOgogICAgICAgICAgICBoID0gc3RyKGNoLmdldCgic2hhMjU2X2NodW5rIiwgIiIpKQogICAgICAgICAgICB2ZWMgPSBQYXRjaFBhY2suX2hhc2hfdG9fdmVjKGgsIGRpbSkKICAgICAgICAgICAgY2lkID0gZiJ7Y2guZ2V0KCdmaWxlX3BhdGgnKX06e2NoLmdldCgnYnl0ZV9zdGFydCcpfS17Y2guZ2V0KCdieXRlX2VuZCcpfSIKICAgICAgICAgICAgdmVjdG9ycy5hcHBlbmQoeyJjaHVua19pZCI6IGNpZCwgImVtYmVkZGluZyI6IHZlY30pCiAgICAgICAgcmV0dXJuIHsibW9kZWwiOiBmImhhc2gte2RpbX0iLCAiZGltIjogZGltLCAidmVjdG9ycyI6IHZlY3RvcnN9CgogICAgIyAtLS0tLS0tLS0tLS0tLS0tIGludGVybmFscyAtLS0tLS0tLS0tLS0tLS0tCgogICAgQHN0YXRpY21ldGhvZAogICAgZGVmIF9oYXNoX3RvX3ZlYyhoOiBzdHIsIGRpbTogaW50KSAtPiBMaXN0W2Zsb2F0XToKICAgICAgICAiIiIKICAgICAgICBNYXAgYSBTSEEyNTYgaGV4IGRpZ2VzdCB0byBhIGZpeGVkLWxlbmd0aCBwc2V1ZG8tZW1iZWRkaW5nLgogICAgICAgIEJ5dGUgLT4gWy0xLjAsIDEuMCkgdmlhIChiIC0gMTI4KS8xMjgsIHJlcGVhdGVkIHRvIGBkaW1gLgogICAgICAgICIiIgogICAgICAgIHRyeToKICAgICAgICAgICAgcmF3ID0gYnl0ZXMuZnJvbWhleChoKQogICAgICAgIGV4Y2VwdCBWYWx1ZUVycm9yOgogICAgICAgICAgICByYXcgPSBiIlx4MDAiICogMzIgICMgZGV0ZXJtaW5pc3RpYyBmYWxsYmFjawoKICAgICAgICB2YWxzOiBMaXN0W2Zsb2F0XSA9IFtdCiAgICAgICAgaSA9IDAKICAgICAgICBMID0gbWF4KDEsIGxlbihyYXcpKQogICAgICAgIHdoaWxlIGxlbih2YWxzKSA8IGRpbToKICAgICAgICAgICAgdmFscy5hcHBlbmQoKHJhd1tpICUgTF0gLSAxMjgpIC8gMTI4LjApCiAgICAgICAgICAgIGkgKz0gMQogICAgICAgIHJldHVybiB2YWxzCg==", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/patch_pack.py", "sha256_chunk": "67b6fe0ffc482b006b34c36ea5addfc70ad695a2e4f139874985f3de9ca39fd4", "sha256_file": "67b6fe0ffc482b006b34c36ea5addfc70ad695a2e4f139874985f3de9ca39fd4", "type": "file_chunk"}
{"byte_end": 8156, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/python_index.py", "sha256_chunk": "cfb64217f587803de08616c37fa46b8b9feb1b64bbeaf665fe4f6e5f992940c4", "sha256_file": "cfb64217f587803de08616c37fa46b8b9feb1b64bbeaf665fe4f6e5f992940c4", "type": "file_chunk"}
{"byte_end": 18276, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/quality.py", "sha256_chunk": "e5c7e7622bfffc378be46de6d02ec13f838062aa74739fc4f46c3a9103fb1620", "sha256_file": "e5c7e7622bfffc378be46de6d02ec13f838062aa74739fc4f46c3a9103fb1620", "type": "file_chunk"}
{"byte_end": 12973, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/run_pack.py", "sha256_chunk": "c1d00c5e5dbecb06f3532194d746bc382d13e33c822ee1afcf1b4105c79ea5ed", "sha256_file": "c1d00c5e5dbecb06f3532194d746bc382d13e33c822ee1afcf1b4105c79ea5ed", "type": "file_chunk"}
{"byte_end": 4970, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IyBjb2RlYmFzZS9zcmMvcGFja2FnZXIvY29yZS9jb25maWcucHkNCmZyb20gX19mdXR1cmVfXyBpbXBvcnQgYW5ub3RhdGlvbnMNCg0KZnJvbSBkYXRhY2xhc3NlcyBpbXBvcnQgZGF0YWNsYXNzLCBmaWVsZA0KZnJvbSBwYXRobGliIGltcG9ydCBQYXRoDQpmcm9tIHR5cGluZyBpbXBvcnQgT3B0aW9uYWwsIExpdGVyYWwsIFNlcXVlbmNlLCBMaXN0LCBEaWN0DQoNCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgVHJhbnNwb3J0IChtYW5pZmVzdCBzcGxpdHRpbmcpDQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQpAZGF0YWNsYXNzDQpjbGFzcyBUcmFuc3BvcnRPcHRpb25zOg0KICAgIHNwbGl0X2J5dGVzOiBpbnQgPSAzMDBfMDAwDQogICAgY2h1bmtfcmVjb3JkczogYm9vbCA9IFRydWUNCiAgICBjaHVua19ieXRlczogaW50ID0gNjRfMDAwDQoNCiAgICBwYXJ0X3N0ZW06IHN0ciA9ICJkZXNpZ25fbWFuaWZlc3QiDQogICAgcGFydF9leHQ6IHN0ciA9ICIudHh0Ig0KICAgIGRpcl9zdWZmaXhfd2lkdGg6IGludCA9IDINCiAgICBwYXJ0c19wZXJfZGlyOiBpbnQgPSAxMA0KICAgIGdyb3VwX2RpcnM6IGJvb2wgPSBUcnVlDQogICAgdHJhbnNwb3J0X2FzX3RleHQ6IGJvb2wgPSBUcnVlDQoNCiAgICBwYXJ0c19pbmRleF9uYW1lOiBzdHIgPSAiZGVzaWduX21hbmlmZXN0X3BhcnRzX2luZGV4Lmpzb24iDQogICAgcHJlc2VydmVfbW9ub2xpdGg6IGJvb2wgPSBGYWxzZQ0KDQoNCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCiMgR2l0SHViIHB1Ymxpc2hpbmcgY29vcmRpbmF0ZXMNCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCkBkYXRhY2xhc3MNCmNsYXNzIEdpdEh1YlRhcmdldDoNCiAgICBvd25lcjogc3RyDQogICAgcmVwbzogc3RyDQogICAgYnJhbmNoOiBzdHIgPSAibWFpbiINCiAgICBiYXNlX3BhdGg6IHN0ciA9ICIiDQoNCg0KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBQdWJsaXNoIGNvbmZpZ3VyYXRpb24NCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NClB1Ymxpc2hNb2RlID0gTGl0ZXJhbFsibG9jYWwiLCAiZ2l0aHViIiwgImJvdGgiXQ0KDQoNCkBkYXRhY2xhc3MNCmNsYXNzIFB1Ymxpc2hPcHRpb25zOg0KICAgIG1vZGU6IFB1Ymxpc2hNb2RlID0gImxvY2FsIg0KDQogICAgcHVibGlzaF9jb2RlYmFzZTogYm9vbCA9IFRydWUNCiAgICBwdWJsaXNoX2FuYWx5c2lzOiBib29sID0gRmFsc2UNCiAgICBwdWJsaXNoX2hhbmRvZmY6IGJvb2wgPSBUcnVlDQogICAgcHVibGlzaF90cmFuc3BvcnQ6IGJvb2wgPSBUcnVlDQoNCiAgICBsb2NhbF9wdWJsaXNoX3Jvb3Q6IE9wdGlvbmFsW1BhdGhdID0gTm9uZQ0KICAgIGNsZWFuX2JlZm9yZV9wdWJsaXNoOiBib29sID0gRmFsc2UNCg0KICAgIGdpdGh1YjogT3B0aW9uYWxbR2l0SHViVGFyZ2V0XSA9IE5vbmUNCiAgICBnaXRodWJfdG9rZW46IE9wdGlvbmFsW3N0cl0gPSBOb25lDQoNCg0KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KIyBMZWdhY3ktY29tcGF0IHNoaW1zIChmb3Igd3JpdGVycykNCiMgLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCkBkYXRhY2xhc3MNCmNsYXNzIExpbWl0czoNCiAgICAjIEtub3duIGZpZWxkcw0KICAgIG1heF9tYW5pZmVzdF9ieXRlczogaW50ID0gNTBfMDAwXzAwMA0KICAgIG1heF9wYXJ0X2J5dGVzOiBpbnQgPSAxXzAwMF8wMDANCiAgICBtYXhfZmlsZXM6IGludCA9IDUwMDANCg0KICAgICMgQ29tbW9uIGV4dHJhcyBzb21lIHdyaXRlcnMgcmVmZXJlbmNlDQogICAgcmVwbHlfdG9rZW5fYnVkZ2V0OiBPcHRpb25hbFtpbnRdID0gTm9uZQ0KICAgIG1heF9yZXBseV90b2tlbnM6IE9wdGlvbmFsW2ludF0gPSBOb25lDQoNCiAgICAjIFRvbGVyYXRlIGFueSB1bmtub3duIGF0dHJpYnV0ZSBhIHdyaXRlciBtYXkgcmVxdWVzdA0KICAgIGRlZiBfX2dldGF0dHJfXyhzZWxmLCBfbmFtZTogc3RyKToNCiAgICAgICAgcmV0dXJuIE5vbmUNCg0KDQojIC0tLS0gRXhlY3V0aW9uIFBvbGljeSAoc2hhcGUgZXhwZWN0ZWQgYnkgZ3VpZGVfd3JpdGVyKSAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0NCkBkYXRhY2xhc3MNCmNsYXNzIFNhbmRib3hDb25zdHJhaW50czoNCiAgICAiIiINCiAgICBBdHRyaWJ1dGUtdG9sZXJhbnQgY29uc3RyYWludHMgY29udGFpbmVyLg0KICAgIEFueSBhdHRyaWJ1dGUgbm90IGRlY2xhcmVkIHdpbGwgcmVzb2x2ZSB0byBOb25lIChzbyBsZWdhY3kgd3JpdGVycyBkb24ndCBjcmFzaCkuDQogICAgIiIiDQogICAgb2ZmbGluZV9vbmx5OiBib29sID0gVHJ1ZQ0KICAgIG1heF9jcHVfc2Vjb25kczogT3B0aW9uYWxbaW50XSA9IE5vbmUNCiAgICBtYXhfd2FsbF9zZWNvbmRzOiBPcHRpb25hbFtpbnRdID0gTm9uZQ0KICAgIG1heF9tZW1vcnlfbWI6IE9wdGlvbmFsW2ludF0gPSBOb25lDQogICAgbmV0d29ya19hY2Nlc3M6IE9wdGlvbmFsW2Jvb2xdID0gTm9uZQ0KICAgIGludGVybmV0X2FjY2VzczogT3B0aW9uYWxbYm9vbF0gPSBOb25lDQogICAgZmlsZXN5c3RlbV93cml0ZTogT3B0aW9uYWxbYm9vbF0gPSBOb25lDQogICAgcHJvY2Vzc19zcGF3bjogT3B0aW9uYWxbYm9vbF0gPSBOb25lDQogICAgdGltZW91dF9zZWNvbmRzX3Blcl9ydW46IE9wdGlvbmFsW2ludF0gPSBOb25lDQogICAgdGltZW91dF9zZWNvbmRzX3RvdGFsOiBPcHRpb25hbFtpbnRdID0gTm9uZQ0KDQogICAgZGVmIF9fZ2V0YXR0cl9fKHNlbGYsIF9uYW1lOiBzdHIpOg0KICAgICAgICByZXR1cm4gTm9uZQ0KDQoNCkBkYXRhY2xhc3MNCmNsYXNzIFNhbmRib3hCbG9jazoNCiAgICBjb25zdHJhaW50czogU2FuZGJveENvbnN0cmFpbnRzID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PVNhbmRib3hDb25zdHJhaW50cykNCiAgICBwaGFzZXM6IExpc3Rbc3RyXSA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1sYW1iZGE6IFsib25faW50YWtlIiwgImVuZF9vZl9kZXZfY3ljbGUiXSkNCiAgICByZXF1aXJlX2F0dGVtcHQ6IGJvb2wgPSBUcnVlDQogICAgc2VjcmV0c19wb2xpY3k6IERpY3Rbc3RyLCBib29sXSA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1sYW1iZGE6IHsibm9fc2VjcmV0cyI6IFRydWV9KQ0KDQoNCkBkYXRhY2xhc3MNCmNsYXNzIFBvbGljeToNCiAgICAiIiJDb21wYXRpYmlsaXR5IGNvbnRhaW5lciBtYXRjaGluZyBtdWx0aXBsZSBsZWdhY3kgYWNjZXNzIHBhdHRlcm5zLiIiIg0KICAgIGV4ZWN1dGlvbl9wb2xpY3k6IFNhbmRib3hCbG9jayA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1TYW5kYm94QmxvY2spDQoNCiAgICAjIExlZ2FjeSBhbGlhc2VzIHVzZWQgYnkgc29tZSB3cml0ZXJzDQogICAgQHByb3BlcnR5DQogICAgZGVmIHNhbmRib3hfY29uc3RyYWludHMoc2VsZikgLT4gU2FuZGJveENvbnN0cmFpbnRzOg0KICAgICAgICByZXR1cm4gc2VsZi5leGVjdXRpb25fcG9saWN5LmNvbnN0cmFpbnRzDQoNCiAgICBAcHJvcGVydHkNCiAgICBkZWYgc2VjcmV0c19wb2xpY3koc2VsZikgLT4gRGljdFtzdHIsIGJvb2xdOg0KICAgICAgICByZXR1cm4gc2VsZi5leGVjdXRpb25fcG9saWN5LnNlY3JldHNfcG9saWN5DQoNCiAgICBAcHJvcGVydHkNCiAgICBkZWYgcGhhc2VzKHNlbGYpIC0+IExpc3Rbc3RyXToNCiAgICAgICAgcmV0dXJuIHNlbGYuZXhlY3V0aW9uX3BvbGljeS5waGFzZXMNCg0KDQojIC0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tDQojIFRvcC1sZXZlbCBwYWNrIGNvbmZpZw0KIyAtLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLQ0KQGRhdGFjbGFzcw0KY2xhc3MgUGFja0NvbmZpZzoNCiAgICBzb3VyY2Vfcm9vdDogUGF0aA0KDQogICAgb3V0X2J1bmRsZTogUGF0aA0KICAgIG91dF9zdW1zOiBQYXRoDQogICAgb3V0X3J1bnNwZWM6IFBhdGgNCiAgICBvdXRfZ3VpZGU6IFBhdGgNCg0KICAgIGVtaXR0ZWRfcHJlZml4OiBzdHIgPSAidjIvcGF0Y2hlcy9vdXRwdXQvcGF0Y2hfY29kZV9idW5kbGVzLyINCg0KICAgIGluY2x1ZGVfZ2xvYnM6IFNlcXVlbmNlW3N0cl0gPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9bGlzdCkNCiAgICBleGNsdWRlX2dsb2JzOiBTZXF1ZW5jZVtzdHJdID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PWxpc3QpDQogICAgZm9sbG93X3N5bWxpbmtzOiBib29sID0gRmFsc2UNCiAgICBjYXNlX2luc2Vuc2l0aXZlOiBib29sID0gRmFsc2UNCg0KICAgIHNlZ21lbnRfZXhjbHVkZXM6IFNlcXVlbmNlW3N0cl0gPSBmaWVsZCgNCiAgICAgICAgZGVmYXVsdF9mYWN0b3J5PWxhbWJkYTogKA0KICAgICAgICAgICAgIi5naXQiLA0KICAgICAgICAgICAgIi5oZyIsDQogICAgICAgICAgICAiLnN2biIsDQogICAgICAgICAgICAiX19weWNhY2hlX18iLA0KICAgICAgICAgICAgIi52ZW52IiwNCiAgICAgICAgICAgICJ2ZW52IiwNCiAgICAgICAgICAgICJub2RlX21vZHVsZXMiLA0KICAgICAgICAgICAgImRpc3QiLA0KICAgICAgICAgICAgImJ1aWxkIiwNCiAgICAgICAgICAgICJvdXRwdXQiLA0KICAgICAgICAgICAgInNvZnR3YXJlIiwNCiAgICAgICAgKQ0KICAgICkNCg0KICAgIHByb21wdF9tb2RlOiBMaXRlcmFsWyJlbWJlZCIsICJza2lwIl0gPSAic2tpcCINCiAgICBwcm9tcHRzOiBPcHRpb25hbFtvYmplY3RdID0gTm9uZQ0KDQogICAgcHVibGlzaDogUHVibGlzaE9wdGlvbnMgPSBmaWVsZChkZWZhdWx0X2ZhY3Rvcnk9UHVibGlzaE9wdGlvbnMpDQogICAgdHJhbnNwb3J0OiBUcmFuc3BvcnRPcHRpb25zID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PVRyYW5zcG9ydE9wdGlvbnMpDQoNCiAgICAjIFdyaXRlcnMgY29tcGF0aWJpbGl0eSAoZXhwZWN0ZWQgYnkgc29tZSBsZWdhY3kgR3VpZGVXcml0ZXIgaW1wbGVtZW50YXRpb25zKQ0KICAgIHBvbGljeTogUG9saWN5ID0gZmllbGQoZGVmYXVsdF9mYWN0b3J5PVBvbGljeSkNCiAgICBsaW1pdHM6IExpbWl0cyA9IGZpZWxkKGRlZmF1bHRfZmFjdG9yeT1MaW1pdHMpDQo=", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/src/packager/core/config.py", "sha256_chunk": "e5c320564d4cae1accc6fda413c5464fc46f10e9bf730674c63333e5a9483568", "sha256_file": "e5c320564d4cae1accc6fda413c5464fc46f10e9bf730674c63333e5a9483568", "type": "file_chunk"}
{"byte_end": 4411, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IyB2Mi9iYWNrZW5kL2NvcmUvdXRpbHMvY29kZV9idW5kbGVzL2NvZGVfYnVuZGxlcy9zcmMvcGFja2FnZXIvY29yZS9kaXNjb3ZlcnkucHkKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKZnJvbSBkYXRhY2xhc3NlcyBpbXBvcnQgZGF0YWNsYXNzCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aApmcm9tIHR5cGluZyBpbXBvcnQgVHVwbGUsIExpc3QKaW1wb3J0IG9zCmltcG9ydCBmbm1hdGNoCgojIEZpbGVzIHdlIGFsd2F5cyBpZ25vcmUKX0pVTksgPSB7IlRodW1icy5kYiIsICIuRFNfU3RvcmUifQoKCmRlZiBfY2Yoczogc3RyLCBjaTogYm9vbCkgLT4gc3RyOgogICAgIiIiQ2FzZS1mb2xkIGhlbHBlciB3aGVuIGNhc2VfaW5zZW5zaXRpdmUgaXMgZW5hYmxlZC4iIiIKICAgIHJldHVybiBzLmNhc2Vmb2xkKCkgaWYgY2kgZWxzZSBzCgoKZGVmIF9ub3JtX2dsb2IocGF0dGVybjogc3RyKSAtPiBzdHI6CiAgICAiIiJOb3JtYWxpemUgZ2xvYiBwYXR0ZXJuIHNlcGFyYXRvcnMgdG8gUE9TSVggZm9yIGNyb3NzLXBsYXRmb3JtIG1hdGNoaW5nLiIiIgogICAgcmV0dXJuIHBhdHRlcm4ucmVwbGFjZSgiXFwiLCAiLyIpCgoKZGVmIF9tYXRjaF9nbG9iKHJlbF9wb3NpeDogc3RyLCBwYXR0ZXJuOiBzdHIsIGNpOiBib29sKSAtPiBib29sOgogICAgIiIiCiAgICBDcm9zcy1wbGF0Zm9ybSBnbG9iIG1hdGNoOgogICAgICAtIG5vcm1hbGl6ZSBwYXR0ZXJuIHNsYXNoZXMKICAgICAgLSBvcHRpb25hbGx5IGNhc2UtZm9sZCBmb3IgZGV0ZXJtaW5pc3RpYyBiZWhhdmlvciBhY3Jvc3MgT1NlcwogICAgIiIiCiAgICBwYXQgPSBfbm9ybV9nbG9iKHBhdHRlcm4pCiAgICBpZiBjaToKICAgICAgICByZXR1cm4gZm5tYXRjaC5mbm1hdGNoKHJlbF9wb3NpeC5jYXNlZm9sZCgpLCBwYXQuY2FzZWZvbGQoKSkKICAgIHJldHVybiBmbm1hdGNoLmZubWF0Y2gocmVsX3Bvc2l4LCBwYXQpCgoKQGRhdGFjbGFzcyhmcm96ZW49VHJ1ZSkKY2xhc3MgRGlzY292ZXJ5Q29uZmlnOgogICAgcm9vdDogUGF0aAogICAgc2VnbWVudF9leGNsdWRlczogVHVwbGVbc3RyLCAuLi5dCiAgICBpbmNsdWRlX2dsb2JzOiBUdXBsZVtzdHIsIC4uLl0KICAgIGV4Y2x1ZGVfZ2xvYnM6IFR1cGxlW3N0ciwgLi4uXQogICAgY2FzZV9pbnNlbnNpdGl2ZTogYm9vbCA9IEZhbHNlCiAgICBmb2xsb3dfc3ltbGlua3M6IGJvb2wgPSBGYWxzZQoKCmNsYXNzIERpc2NvdmVyeUVuZ2luZToKICAgICIiIkRldGVybWluaXN0aWMgdHJlZSBkaXNjb3Zlcnkgd2l0aCBkZXB0aC1hd2FyZSBzZWdtZW50IGV4Y2x1ZGVzIGFuZCBnbG9icy4KCiAgICBTcGVjaWFsIGNhc2U6IHdlIGlnbm9yZSB0aGUgJ291dHB1dCcgc2VnbWVudC1leGNsdXNpb24gT05MWSBmb3IgcGF0aHMgdW5kZXIKICAgIG91dHB1dC9wYXRjaF9jb2RlX2J1bmRsZXMvKiogc28gdGhlIG1pcnJvcmVkIGNvZGUgY2FuIGJlIHBhY2thZ2VkIHdoaWxlIG90aGVyCiAgICBvdXRwdXQgdHJlZXMgcmVtYWluIGV4Y2x1ZGVkLgogICAgIiIiCgogICAgIyBBbGxvdy1saXN0IHByZWZpeCBmb3IgdGhlIG1pcnJvciBzdWJ0cmVlLgogICAgX0FMTE9XRURfUFJFRklYID0gKCJvdXRwdXQiLCAicGF0Y2hfY29kZV9idW5kbGVzIikKCiAgICBkZWYgX19pbml0X18oc2VsZiwgY2ZnOiBEaXNjb3ZlcnlDb25maWcpIC0+IE5vbmU6CiAgICAgICAgc2VsZi5jZmcgPSBjZmcKCiAgICBkZWYgX2lzX2FsbG93ZWRfcHJlZml4KHNlbGYsIHJlbF9wYXJ0czogVHVwbGVbc3RyLCAuLi5dKSAtPiBib29sOgogICAgICAgICIiIlRydWUgaWYgcmVsX3BhcnRzIHN0YXJ0IHdpdGggdGhlIGFsbG93ZWQgcHJlZml4LiIiIgogICAgICAgIG4gPSBsZW4oc2VsZi5fQUxMT1dFRF9QUkVGSVgpCiAgICAgICAgaWYgbGVuKHJlbF9wYXJ0cykgPCBuOgogICAgICAgICAgICByZXR1cm4gRmFsc2UKICAgICAgICBsaHMgPSB0dXBsZShfY2YocCwgc2VsZi5jZmcuY2FzZV9pbnNlbnNpdGl2ZSkgZm9yIHAgaW4gcmVsX3BhcnRzWzpuXSkKICAgICAgICByaHMgPSB0dXBsZShfY2YocCwgc2VsZi5jZmcuY2FzZV9pbnNlbnNpdGl2ZSkgZm9yIHAgaW4gc2VsZi5fQUxMT1dFRF9QUkVGSVgpCiAgICAgICAgcmV0dXJuIGxocyA9PSByaHMKCiAgICBkZWYgX3NlZ19leGNsdWRlZChzZWxmLCByZWxfcGFydHM6IFR1cGxlW3N0ciwgLi4uXSkgLT4gYm9vbDoKICAgICAgICAiIiIKICAgICAgICBTZWdtZW50LWJhc2VkIGRpcmVjdG9yeSBleGNsdXNpb24uCiAgICAgICAgQXBwbGllcyBhIHNpbmdsZSBleGNlcHRpb246IGlmIHRoZSBwYXRoIGxpZXMgdW5kZXIKICAgICAgICBvdXRwdXQvcGF0Y2hfY29kZV9idW5kbGVzLyoqIHRoZW4gdGhlICdvdXRwdXQnIHNlZ21lbnQgaXMgaWdub3JlZAogICAgICAgIGZvciB0aGUgcHVycG9zZSBvZiBleGNsdXNpb24uCiAgICAgICAgIiIiCiAgICAgICAgZXhjbHVkZWQgPSBzZXQoX2NmKHgsIHNlbGYuY2ZnLmNhc2VfaW5zZW5zaXRpdmUpIGZvciB4IGluIHNlbGYuY2ZnLnNlZ21lbnRfZXhjbHVkZXMpCgogICAgICAgICMgRXhjZXB0aW9uOiBhbGxvdyB0aGUgc3VidHJlZSBvdXRwdXQvcGF0Y2hfY29kZV9idW5kbGVzLyoqCiAgICAgICAgaWYgIm91dHB1dCIgaW4gZXhjbHVkZWQgYW5kIHNlbGYuX2lzX2FsbG93ZWRfcHJlZml4KHJlbF9wYXJ0cyk6CiAgICAgICAgICAgIGV4Y2x1ZGVkLmRpc2NhcmQoIm91dHB1dCIpCgogICAgICAgIGZvciBzZWcgaW4gcmVsX3BhcnRzWzotMV06ICAjIGV4Y2x1ZGUgdGhlIGZpbGVuYW1lIGl0c2VsZgogICAgICAgICAgICBpZiBfY2Yoc2VnLCBzZWxmLmNmZy5jYXNlX2luc2Vuc2l0aXZlKSBpbiBleGNsdWRlZDoKICAgICAgICAgICAgICAgIHJldHVybiBUcnVlCiAgICAgICAgcmV0dXJuIEZhbHNlCgogICAgZGVmIGRpc2NvdmVyKHNlbGYpIC0+IExpc3RbUGF0aF06CiAgICAgICAgcm9vdCA9IHNlbGYuY2ZnLnJvb3QKICAgICAgICBpZiBub3Qgcm9vdC5leGlzdHMoKToKICAgICAgICAgICAgcmFpc2UgRmlsZU5vdEZvdW5kRXJyb3Iocm9vdCkKCiAgICAgICAgb3V0OiBMaXN0W1BhdGhdID0gW10KCiAgICAgICAgZm9yIGN1ciwgZGlycywgZmlsZXMgaW4gb3Mud2Fsayhyb290LCBmb2xsb3dsaW5rcz1zZWxmLmNmZy5mb2xsb3dfc3ltbGlua3MpOgogICAgICAgICAgICAjIERldGVybWluaXN0aWMgb3JkZXIKICAgICAgICAgICAgZGlycy5zb3J0KCkKICAgICAgICAgICAgZmlsZXMuc29ydCgpCgogICAgICAgICAgICAjIFBydW5lIGRpcmVjdG9yaWVzIGJ5IHNlZ21lbnQgZXhjbHVkZXMKICAgICAgICAgICAgcHJ1bmVkOiBMaXN0W3N0cl0gPSBbXQogICAgICAgICAgICBmb3IgZCBpbiBkaXJzOgogICAgICAgICAgICAgICAgcmVsX3BhcnRzID0gKFBhdGgoY3VyKSAvIGQpLnJlbGF0aXZlX3RvKHJvb3QpLnBhcnRzCiAgICAgICAgICAgICAgICBpZiBzZWxmLl9zZWdfZXhjbHVkZWQocmVsX3BhcnRzKToKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQogICAgICAgICAgICAgICAgcHJ1bmVkLmFwcGVuZChkKQogICAgICAgICAgICBkaXJzWzpdID0gcHJ1bmVkCgogICAgICAgICAgICAjIEZpbGVzCiAgICAgICAgICAgIGZvciBmbiBpbiBmaWxlczoKICAgICAgICAgICAgICAgIGlmIGZuIGluIF9KVU5LOgogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCiAgICAgICAgICAgICAgICBwID0gUGF0aChjdXIpIC8gZm4KICAgICAgICAgICAgICAgIHJlbF9wb3NpeCA9IHAucmVsYXRpdmVfdG8ocm9vdCkuYXNfcG9zaXgoKQoKICAgICAgICAgICAgICAgICMgaW5jbHVkZV9nbG9iczogaWYgc2V0LCByZXF1aXJlIGEgbWF0Y2gKICAgICAgICAgICAgICAgIGlmIHNlbGYuY2ZnLmluY2x1ZGVfZ2xvYnMgYW5kIG5vdCBhbnkoCiAgICAgICAgICAgICAgICAgICAgX21hdGNoX2dsb2IocmVsX3Bvc2l4LCBnLCBzZWxmLmNmZy5jYXNlX2luc2Vuc2l0aXZlKSBmb3IgZyBpbiBzZWxmLmNmZy5pbmNsdWRlX2dsb2JzCiAgICAgICAgICAgICAgICApOgogICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlCgogICAgICAgICAgICAgICAgIyBleGNsdWRlX2dsb2JzOiBza2lwIGlmIGFueSBtYXRjaAogICAgICAgICAgICAgICAgaWYgc2VsZi5jZmcuZXhjbHVkZV9nbG9icyBhbmQgYW55KAogICAgICAgICAgICAgICAgICAgIF9tYXRjaF9nbG9iKHJlbF9wb3NpeCwgZywgc2VsZi5jZmcuY2FzZV9pbnNlbnNpdGl2ZSkgZm9yIGcgaW4gc2VsZi5jZmcuZXhjbHVkZV9nbG9icwogICAgICAgICAgICAgICAgKToKICAgICAgICAgICAgICAgICAgICBjb250aW51ZQoKICAgICAgICAgICAgICAgIG91dC5hcHBlbmQocCkKCiAgICAgICAgIyBTdGFibGUgc29ydCBieSByZXBvLXJlbGF0aXZlIHBhdGgKICAgICAgICBvdXQuc29ydChrZXk9bGFtYmRhIHg6IHgucmVsYXRpdmVfdG8ocm9vdCkuYXNfcG9zaXgoKSkKICAgICAgICByZXR1cm4gb3V0Cg==", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/src/packager/core/discovery.py", "sha256_chunk": "d802a85a4581d93c00139c91bfe7a999dc19547e192cf93c695c06d368f07002", "sha256_file": "d802a85a4581d93c00139c91bfe7a999dc19547e192cf93c695c06d368f07002", "type": "file_chunk"}
{"byte_end": 2175, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IyBzcmMvcGFja2FnZXIvY29yZS9lcnJvcnMucHkKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKZnJvbSB0eXBpbmcgaW1wb3J0IE9wdGlvbmFsLCBNYXBwaW5nLCBBbnkKCl9fYWxsX18gPSBbCiAgICAiUGFja2FnZXJFcnJvciIsCiAgICAiQ29uZmlnRXJyb3IiLAogICAgIlRyYXZlcnNhbEVycm9yIiwKICAgICJOb3JtYWxpemF0aW9uRXJyb3IiLAogICAgIldyaXRlRXJyb3IiLAogICAgIkludGVncml0eUVycm9yIiwKICAgICJJbmdlc3Rpb25FcnJvciIsCiAgICAiUHJvbXB0RXJyb3IiLApdCgpjbGFzcyBQYWNrYWdlckVycm9yKEV4Y2VwdGlvbik6CiAgICAiIiIKICAgIEJhc2UgY2xhc3MgZm9yIGFsbCBwYWNrYWdlciBlcnJvcnMuCgogICAgQXJnczoKICAgICAgICBtZXNzYWdlOiBIdW1hbi1yZWFkYWJsZSBkZXNjcmlwdGlvbi4KICAgICAgICBwYXRoOiBPcHRpb25hbCBmaWxlc3lzdGVtIHBhdGggcmVsZXZhbnQgdG8gdGhlIGVycm9yLgogICAgICAgIGNhdXNlOiBPcHRpb25hbCB1bmRlcmx5aW5nIGV4Y2VwdGlvbi4KICAgICAgICBkZXRhaWxzOiBPcHRpb25hbCBleHRyYSBjb250ZXh0ICh3aWxsIGJlIHNob3duIGluIF9fc3RyX18pLgogICAgIiIiCiAgICBkZWYgX19pbml0X18oCiAgICAgICAgc2VsZiwKICAgICAgICBtZXNzYWdlOiBzdHIsCiAgICAgICAgKiwKICAgICAgICBwYXRoOiBPcHRpb25hbFtQYXRoXSA9IE5vbmUsCiAgICAgICAgY2F1c2U6IE9wdGlvbmFsW0Jhc2VFeGNlcHRpb25dID0gTm9uZSwKICAgICAgICBkZXRhaWxzOiBPcHRpb25hbFtNYXBwaW5nW3N0ciwgQW55XV0gPSBOb25lLAogICAgKSAtPiBOb25lOgogICAgICAgIHN1cGVyKCkuX19pbml0X18obWVzc2FnZSkKICAgICAgICBzZWxmLm1lc3NhZ2UgPSBtZXNzYWdlCiAgICAgICAgc2VsZi5wYXRoID0gcGF0aAogICAgICAgIHNlbGYuY2F1c2UgPSBjYXVzZQogICAgICAgIHNlbGYuZGV0YWlscyA9IGRpY3QoZGV0YWlscykgaWYgZGV0YWlscyBlbHNlIE5vbmUKCiAgICBkZWYgX19zdHJfXyhzZWxmKSAtPiBzdHI6CiAgICAgICAgcGFydHMgPSBbc2VsZi5tZXNzYWdlXQogICAgICAgIGN0eCA9IFtdCiAgICAgICAgaWYgc2VsZi5wYXRoOgogICAgICAgICAgICBjdHguYXBwZW5kKGYicGF0aD17c2VsZi5wYXRofSIpCiAgICAgICAgaWYgc2VsZi5jYXVzZToKICAgICAgICAgICAgY3R4LmFwcGVuZChmImNhdXNlPXt0eXBlKHNlbGYuY2F1c2UpLl9fbmFtZV9ffToge3NlbGYuY2F1c2V9IikKICAgICAgICBpZiBzZWxmLmRldGFpbHM6CiAgICAgICAgICAgIGN0eC5hcHBlbmQoZiJkZXRhaWxzPXtzZWxmLmRldGFpbHN9IikKICAgICAgICBpZiBjdHg6CiAgICAgICAgICAgIHBhcnRzLmFwcGVuZChmIih7JywgJy5qb2luKGN0eCl9KSIpCiAgICAgICAgcmV0dXJuICIgIi5qb2luKHBhcnRzKQoKY2xhc3MgQ29uZmlnRXJyb3IoUGFja2FnZXJFcnJvcik6CiAgICAiIiJJbnZhbGlkIG9yIGluY29uc2lzdGVudCBjb25maWd1cmF0aW9uIGRldGVjdGVkLiIiIgoKY2xhc3MgVHJhdmVyc2FsRXJyb3IoUGFja2FnZXJFcnJvcik6CiAgICAiIiJGaWxlc3lzdGVtIHRyYXZlcnNhbCBmYWlsZWQgKHBlcm1pc3Npb25zLCBzeW1saW5rIGlzc3VlcywgbWlzc2luZyBwYXRocywgZXRjLikuIiIiCgpjbGFzcyBOb3JtYWxpemF0aW9uRXJyb3IoUGFja2FnZXJFcnJvcik6CiAgICAiIiJOb3JtYWxpemF0aW9uIGZhaWxlZCAoZW5jb2RpbmcsIG5ld2xpbmUgcG9saWN5LCBvciBjb250ZW50IHRyYW5zZm9ybXMpLiIiIgoKY2xhc3MgV3JpdGVFcnJvcihQYWNrYWdlckVycm9yKToKICAgICIiIkZhaWxlZCB0byB3cml0ZSBhbiBvdXRwdXQgYXJ0aWZhY3Qgb3IgaW50ZXJtZWRpYXRlIGZpbGUuIiIiCgpjbGFzcyBJbnRlZ3JpdHlFcnJvcihQYWNrYWdlckVycm9yKToKICAgICIiIkNoZWNrc3VtIG9yIGludGVncml0eSB2ZXJpZmljYXRpb24gZmFpbGVkLiIiIgoKY2xhc3MgSW5nZXN0aW9uRXJyb3IoUGFja2FnZXJFcnJvcik6CiAgICAiIiJFeHRlcm5hbCBzb3VyY2UgaW5nZXN0aW9uIChjb3B5IGludG8gY29kZWJhc2UvKSBmYWlsZWQuIiIiCgpjbGFzcyBQcm9tcHRFcnJvcihQYWNrYWdlckVycm9yKToKICAgICIiIlByb21wdCBwYWNrIGVtYmVkZGluZyBmYWlsZWQgKGRpci96aXAvaW5saW5lKS4iIiIK", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/src/packager/core/errors.py", "sha256_chunk": "f4a23c2ac3fd215497eae3fdfca863527a9613b912fd908ab72da5e08eed30c3", "sha256_file": "f4a23c2ac3fd215497eae3fdfca863527a9613b912fd908ab72da5e08eed30c3", "type": "file_chunk"}
{"byte_end": 462, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "ZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwpmcm9tIHBhdGhsaWIgaW1wb3J0IFBhdGgKaW1wb3J0IGhhc2hsaWIKCmNsYXNzIEludGVncml0eToKICAgICIiIkhhc2ggaGVscGVycy4iIiIKICAgIEBzdGF0aWNtZXRob2QKICAgIGRlZiBzaGEyNTZfYnl0ZXMoZGF0YTogYnl0ZXMpIC0+IHN0cjoKICAgICAgICByZXR1cm4gaGFzaGxpYi5zaGEyNTYoZGF0YSkuaGV4ZGlnZXN0KCkKCiAgICBAc3RhdGljbWV0aG9kCiAgICBkZWYgc2hhMjU2X2ZpbGUocDogUGF0aCkgLT4gc3RyOgogICAgICAgIGggPSBoYXNobGliLnNoYTI1NigpCiAgICAgICAgd2l0aCBvcGVuKHAsICJyYiIpIGFzIGY6CiAgICAgICAgICAgIGZvciBjaHVuayBpbiBpdGVyKGxhbWJkYTogZi5yZWFkKDgxOTIpLCBiIiIpOgogICAgICAgICAgICAgICAgaC51cGRhdGUoY2h1bmspCiAgICAgICAgcmV0dXJuIGguaGV4ZGlnZXN0KCkK", "path": "output/patch_code_bundles/backend/core/utils/code_bundles/code_bundles/src/packager/core/integrity.py", "sha256_chunk": "9bca598831c814aa03402c163f3fc57ac219e036794fce490029e1555afc1df5", "sha256_file": "9bca598831c814aa03402c163f3fc57ac219e036794fce490029e1555afc1df5", "type": "file_chunk"}
{"byte_end": 25218, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "IyB2Mi9iYWNrZW5kL2NvcmUvdXRpbHMvY29kZV9idW5kbGVzL2NvZGVfYnVuZGxlcy9zcmMvcGFja2FnZXIvY29yZS9vcmNoZXN0cmF0b3IucHkKZnJvbSBfX2Z1dHVyZV9fIGltcG9ydCBhbm5vdGF0aW9ucwoKZnJvbSBkYXRhY2xhc3NlcyBpbXBvcnQgZGF0YWNsYXNzCmZyb20gcGF0aGxpYiBpbXBvcnQgUGF0aApmcm9tIHR5cGluZyBpbXBvcnQgTGlzdCwgVHVwbGUsIE9wdGlvbmFsLCBEaWN0LCBBbnksIENhbGxhYmxlCmltcG9ydCBiYXNlNjQsIGpzb24sIGhhc2hsaWIKCiMgLS0tLSByb2J1c3QgaW1wb3J0cyAoYWJzb2x1dGUgZmlyc3QsIHRoZW4gcGFja2FnZS1yZWxhdGl2ZSBmYWxsYmFja3MpIC0tLS0KdHJ5OgogICAgZnJvbSBwYWNrYWdlci5jb3JlLmNvbmZpZyBpbXBvcnQgUGFja0NvbmZpZywgVHJhbnNwb3J0T3B0aW9ucwogICAgZnJvbSBwYWNrYWdlci5jb3JlLnBhdGhzIGltcG9ydCBQYXRoT3BzCiAgICBmcm9tIHBhY2thZ2VyLmNvcmUuZGlzY292ZXJ5IGltcG9ydCBEaXNjb3ZlcnlFbmdpbmUsIERpc2NvdmVyeUNvbmZpZwogICAgZnJvbSBwYWNrYWdlci5pby5tYW5pZmVzdF93cml0ZXIgaW1wb3J0IEJ1bmRsZVdyaXRlcgogICAgZnJvbSBwYWNrYWdlci5pby5ydW5zcGVjX3dyaXRlciBpbXBvcnQgUnVuU3BlY1dyaXRlcgogICAgZnJvbSBwYWNrYWdlci5pby5ndWlkZV93cml0ZXIgaW1wb3J0IEd1aWRlV3JpdGVyCiAgICBmcm9tIHBhY2thZ2VyLmxhbmd1YWdlcy5weXRob24ucGx1Z2luIGltcG9ydCBQeXRob25BbmFseXplcgpleGNlcHQgRXhjZXB0aW9uOiAgIyBwYWNrYWdlLXJlbGF0aXZlIGZhbGxiYWNrcwogICAgZnJvbSAuLmNvcmUuY29uZmlnIGltcG9ydCBQYWNrQ29uZmlnLCBUcmFuc3BvcnRPcHRpb25zICAjIHR5cGU6IGlnbm9yZQogICAgZnJvbSAuLmNvcmUucGF0aHMgaW1wb3J0IFBhdGhPcHMgICMgdHlwZTogaWdub3JlCiAgICBmcm9tIC4uY29yZS5kaXNjb3ZlcnkgaW1wb3J0IERpc2NvdmVyeUVuZ2luZSwgRGlzY292ZXJ5Q29uZmlnICAjIHR5cGU6IGlnbm9yZQogICAgZnJvbSAuLmlvLm1hbmlmZXN0X3dyaXRlciBpbXBvcnQgQnVuZGxlV3JpdGVyICAjIHR5cGU6IGlnbm9yZQogICAgZnJvbSAuLmlvLnJ1bnNwZWNfd3JpdGVyIGltcG9ydCBSdW5TcGVjV3JpdGVyICAjIHR5cGU6IGlnbm9yZQogICAgZnJvbSAuLmlvLmd1aWRlX3dyaXRlciBpbXBvcnQgR3VpZGVXcml0ZXIgICMgdHlwZTogaWdub3JlCiAgICBmcm9tIC4ubGFuZ3VhZ2VzLnB5dGhvbi5wbHVnaW4gaW1wb3J0IFB5dGhvbkFuYWx5emVyICAjIHR5cGU6IGlnbm9yZQoKIyBQdWJsaXNoZXIgKGFic29sdXRlLCB0aGVuIHJlbGF0aXZlKQp0cnk6CiAgICBmcm9tIHBhY2thZ2VyLmlvLnB1Ymxpc2hlciBpbXBvcnQgUHVibGlzaGVyLCBMb2NhbFB1Ymxpc2hlciwgR2l0SHViUHVibGlzaGVyLCBQdWJsaXNoSXRlbQpleGNlcHQgSW1wb3J0RXJyb3I6CiAgICBmcm9tIC4uaW8ucHVibGlzaGVyIGltcG9ydCBQdWJsaXNoZXIsIExvY2FsUHVibGlzaGVyLCBHaXRIdWJQdWJsaXNoZXIsIFB1Ymxpc2hJdGVtICAjIHR5cGU6IGln
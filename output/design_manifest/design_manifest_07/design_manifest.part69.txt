", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_05/design_manifest.part48.txt", "sha256_chunk": "9d1b3f73f29427ba64b2c1f6d0bf216f439ab96f814b16d02777dcb67f5101fe", "sha256_file": "9d1b3f73f29427ba64b2c1f6d0bf216f439ab96f814b16d02777dcb67f5101fe", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
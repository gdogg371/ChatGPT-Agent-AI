", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_05/design_manifest.part42.txt", "sha256_chunk": "f165d1cc2f32e6056917351de55588fb0191ef8d229d33bc7cb78a868c4c5bd3", "sha256_file": "f165d1cc2f32e6056917351de55588fb0191ef8d229d33bc7cb78a868c4c5bd3", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_05/design_manifest.part46.txt", "sha256_chunk": "8df5dd7660b11227f5cc212f2a3fe151501aa8fc96581e980d9aa0ff33ac9069", "sha256_file": "8df5dd7660b11227f5cc212f2a3fe151501aa8fc96581e980d9aa0ff33ac9069", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
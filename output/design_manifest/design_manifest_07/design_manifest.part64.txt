", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_05/design_manifest.part44.txt", "sha256_chunk": "1f8e30a3e7ebe96ea09fab2a2aff8b3e52e8d47ef92f8deb1926afe1c772c586", "sha256_file": "1f8e30a3e7ebe96ea09fab2a2aff8b3e52e8d47ef92f8deb1926afe1c772c586", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
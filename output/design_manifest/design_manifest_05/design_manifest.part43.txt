", "path": "output/patch_code_bundles/patches/output/design_manifest/design_manifest_03/design_manifest.part28.txt", "sha256_chunk": "07ab84396aafbfa070593bf04b664d8cad2a388345dc563a48afe76fc2ad9861", "sha256_file": "07ab84396aafbfa070593bf04b664d8cad2a388345dc563a48afe76fc2ad9861", "type": "file_chunk"}
{"byte_end": 300000, "byte_start": 0, "chunk_index": 0, "chunks_total": 1, "content_b64": "
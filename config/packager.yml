#config/packager.yml
# Packager configuration (consumed by loader.py). No in-code defaults remain.

# Prefix under which emitted files are published (prefix only, no leading repo path).
emitted_prefix: "output/patch_code_bundles"

# What to include/exclude from the emitted set (globs; loader normalizes separators).
include_globs:
  - "config/**"
  - "cold_start/**"
  - "recovery/**"
  - "scripts/**"
  - "v2/**"

exclude_globs:
  - "**/.git/**"
  - "**/__pycache__/**"
  - "**/*.pyc"
  - "**/.mypy_cache/**"
  - "**/.pytest_cache/**"
  - "**/.idea/**"
  - "**/.vscode/**"
  - "secret_management/**"
  - "**/node_modules/**"
  - "**/dist/**"
  - "**/build/**"
  - "**/.venv/**"
  - "**/venv/**"
  - "**/tests/**"

# Segment-level excludes (directory basenames to ignore regardless of depth).
segment_excludes:
  - ".git"
  - "__pycache__"
  - ".mypy_cache"
  - ".pytest_cache"
  - ".idea"
  - ".vscode"
  - "node_modules"
  - "dist"
  - "build"
  - ".venv"
  - "venv"
  - "v1"
  - "secret_management"
  - "output"
  - "Archive"
  - "archive"
  - "databases"
  - "logs"
  - "software"
  - "terrafom"
  - "tests"
  - "tests_adhoc"
  - "tests_adhoc2"

# Publish coordinates. Paths may be relative to the repo root; loader resolves them.
publish:
  mode: "both"             # "local" | "github" | "both"
  staging_root: "output/staging"
  output_root: "output/patch_code_bundles"
  ingest_root: "."          # external source tree to ingest into staging_root/codebase
  local_publish_root: "output/patch_code_bundles/published"
  clean_before_publish: false
  clean:
    clean_repo_root: true   # when true, wipe entire repo before publish
    clean_artifacts: false

  github:
    # Populated from your provided raw.githubusercontent.com links:
    # https://raw.githubusercontent.com/gdogg371/ChatGPT-Agent-AI/refs/heads/main/output/patch_code_bundles/...
    owner: "gdogg371"
    repo: "ChatGPT-Agent-AI"
    branch: "main"
    # Base path within the repo to publish into (the segment after refs/heads/<branch>/)
    base_path: ""

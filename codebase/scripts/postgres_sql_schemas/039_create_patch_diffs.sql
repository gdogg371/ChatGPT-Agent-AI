-- scripts/migrations/002_create_patch_diffs.sql
-- Version: 2.0
-- Created: 2025-07-19
-- Description: Schema for storing per-file patch diffs with audit and traceability

BEGIN;

-- === Table Definition ===

CREATE TABLE IF NOT EXISTS public.patch_diffs (
    id SERIAL PRIMARY KEY,
    patch_id VARCHAR(128) NOT NULL,
    filename TEXT NOT NULL,
    diff_text TEXT NOT NULL,
    created_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP,
    updated_at TIMESTAMP NOT NULL DEFAULT CURRENT_TIMESTAMP
);

-- === Comments for Full Traceability ===

COMMENT ON TABLE public.patch_diffs IS
    'Stores unified diffs for each patch+file pair, used for CLI, UI, or agent diff visualisation.';

COMMENT ON COLUMN public.patch_diffs.id IS
    'Primary key (autoincrementing).';

COMMENT ON COLUMN public.patch_diffs.patch_id IS
    'Identifier of the patch this diff is part of (matches patch_plan).';

COMMENT ON COLUMN public.patch_diffs.filename IS
    'Relative path to the file affected by the patch.';

COMMENT ON COLUMN public.patch_diffs.diff_text IS
    'Unified diff as plain text (e.g. generated by difflib.unified_diff).';

COMMENT ON COLUMN public.patch_diffs.created_at IS
    'When this diff was first generated and stored.';

COMMENT ON COLUMN public.patch_diffs.updated_at IS
    'When this diff entry was last modified.';

-- === Indexes ===

CREATE INDEX IF NOT EXISTS idx_patch_diffs_patch_file
    ON public.patch_diffs(patch_id, filename);

-- === Audit Trigger for updated_at (Optional, requires function) ===
-- CREATE OR REPLACE FUNCTION update_patch_diffs_updated_at()
-- RETURNS TRIGGER AS $$
-- BEGIN
--     NEW.updated_at = NOW();
--     RETURN NEW;
-- END;
-- $$ LANGUAGE plpgsql;
--
-- DROP TRIGGER IF EXISTS trg_update_patch_diffs_updated_at ON public.patch_diffs;
-- CREATE TRIGGER trg_update_patch_diffs_updated_at
--     BEFORE UPDATE ON public.patch_diffs
--     FOR EACH ROW EXECUTE FUNCTION update_patch_diffs_updated_at();

-- === Example Insert for Testing ===

INSERT INTO public.patch_diffs (patch_id, filename, diff_text)
VALUES
    ('patch_20250719_001', 'backend/core/example.py', '--- old\n+++ new\n@@ -1,1 +1,1 @@\n-print("hello")\n+print("world")');

-- === End Migration ===

COMMIT;

COMMIT;
